// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package schema

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("Actions", testActions)
	t.Run("AmqpEvents", testAmqpEvents)
	t.Run("AppInboxes", testAppInboxes)
	t.Run("AssignedCardPacks", testAssignedCardPacks)
	t.Run("AssignedPlayers", testAssignedPlayers)
	t.Run("AuthGroups", testAuthGroups)
	t.Run("AuthGroupPermissions", testAuthGroupPermissions)
	t.Run("AuthPermissions", testAuthPermissions)
	t.Run("AuthUsers", testAuthUsers)
	t.Run("AuthUserGroups", testAuthUserGroups)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissions)
	t.Run("Badges", testBadges)
	t.Run("BanPenalties", testBanPenalties)
	t.Run("Banners", testBanners)
	t.Run("CardPackTypes", testCardPackTypes)
	t.Run("ChatMessages", testChatMessages)
	t.Run("ChatRoomMembers", testChatRoomMembers)
	t.Run("ChatRooms", testChatRooms)
	t.Run("CompetitionConfigs", testCompetitionConfigs)
	t.Run("CompetitionEditions", testCompetitionEditions)
	t.Run("CompetitionPhases", testCompetitionPhases)
	t.Run("Competitions", testCompetitions)
	t.Run("Countries", testCountries)
	t.Run("DivisionRewards", testDivisionRewards)
	t.Run("Divisions", testDivisions)
	t.Run("DjangoAdminLogs", testDjangoAdminLogs)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedules)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedules)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedules)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasks)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedules)
	t.Run("DjangoContentTypes", testDjangoContentTypes)
	t.Run("DjangoMigrations", testDjangoMigrations)
	t.Run("DjangoSessions", testDjangoSessions)
	t.Run("FanclashCaches", testFanclashCaches)
	t.Run("Followers", testFollowers)
	t.Run("Frames", testFrames)
	t.Run("GameEvents", testGameEvents)
	t.Run("GamePicks", testGamePicks)
	t.Run("GamePowerups", testGamePowerups)
	t.Run("GameSeasons", testGameSeasons)
	t.Run("GameWeekDivisions", testGameWeekDivisions)
	t.Run("GameWeeks", testGameWeeks)
	t.Run("Games", testGames)
	t.Run("Items", testItems)
	t.Run("LeaderboardTypes", testLeaderboardTypes)
	t.Run("Leaderboards", testLeaderboards)
	t.Run("ManualSubscriptions", testManualSubscriptions)
	t.Run("MatchDays", testMatchDays)
	t.Run("MatchEventProcessors", testMatchEventProcessors)
	t.Run("MatchEventSimulations", testMatchEventSimulations)
	t.Run("MatchEvents", testMatchEvents)
	t.Run("MatchHeadlines", testMatchHeadlines)
	t.Run("MatchLeaderboards", testMatchLeaderboards)
	t.Run("MatchNotifications", testMatchNotifications)
	t.Run("MatchPlayers", testMatchPlayers)
	t.Run("MatchRewards", testMatchRewards)
	t.Run("Matches", testMatches)
	t.Run("NFTBuckets", testNFTBuckets)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersions)
	t.Run("OptaFeedItems", testOptaFeedItems)
	t.Run("OptaFeeds", testOptaFeeds)
	t.Run("Orders", testOrders)
	t.Run("PlayerBuckets", testPlayerBuckets)
	t.Run("Players", testPlayers)
	t.Run("PowerupActions", testPowerupActions)
	t.Run("Powerups", testPowerups)
	t.Run("PushNotifications", testPushNotifications)
	t.Run("Regions", testRegions)
	t.Run("Rewards", testRewards)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembers)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayers)
	t.Run("Seasons", testSeasons)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayers)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayers)
	t.Run("Sports", testSports)
	t.Run("StoreProductTransactions", testStoreProductTransactions)
	t.Run("StoreProducts", testStoreProducts)
	t.Run("SubscriptionHistories", testSubscriptionHistories)
	t.Run("SubscriptionRequests", testSubscriptionRequests)
	t.Run("Subscriptions", testSubscriptions)
	t.Run("Teams", testTeams)
	t.Run("Transactions", testTransactions)
	t.Run("UserBadges", testUserBadges)
	t.Run("UserBanners", testUserBanners)
	t.Run("UserDivisions", testUserDivisions)
	t.Run("UserFrames", testUserFrames)
	t.Run("UserGameWeekHistories", testUserGameWeekHistories)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptions)
	t.Run("Users", testUsers)
}

func TestDelete(t *testing.T) {
	t.Run("Actions", testActionsDelete)
	t.Run("AmqpEvents", testAmqpEventsDelete)
	t.Run("AppInboxes", testAppInboxesDelete)
	t.Run("AssignedCardPacks", testAssignedCardPacksDelete)
	t.Run("AssignedPlayers", testAssignedPlayersDelete)
	t.Run("AuthGroups", testAuthGroupsDelete)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsDelete)
	t.Run("AuthPermissions", testAuthPermissionsDelete)
	t.Run("AuthUsers", testAuthUsersDelete)
	t.Run("AuthUserGroups", testAuthUserGroupsDelete)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsDelete)
	t.Run("Badges", testBadgesDelete)
	t.Run("BanPenalties", testBanPenaltiesDelete)
	t.Run("Banners", testBannersDelete)
	t.Run("CardPackTypes", testCardPackTypesDelete)
	t.Run("ChatMessages", testChatMessagesDelete)
	t.Run("ChatRoomMembers", testChatRoomMembersDelete)
	t.Run("ChatRooms", testChatRoomsDelete)
	t.Run("CompetitionConfigs", testCompetitionConfigsDelete)
	t.Run("CompetitionEditions", testCompetitionEditionsDelete)
	t.Run("CompetitionPhases", testCompetitionPhasesDelete)
	t.Run("Competitions", testCompetitionsDelete)
	t.Run("Countries", testCountriesDelete)
	t.Run("DivisionRewards", testDivisionRewardsDelete)
	t.Run("Divisions", testDivisionsDelete)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsDelete)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesDelete)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesDelete)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesDelete)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksDelete)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksDelete)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesDelete)
	t.Run("DjangoContentTypes", testDjangoContentTypesDelete)
	t.Run("DjangoMigrations", testDjangoMigrationsDelete)
	t.Run("DjangoSessions", testDjangoSessionsDelete)
	t.Run("FanclashCaches", testFanclashCachesDelete)
	t.Run("Followers", testFollowersDelete)
	t.Run("Frames", testFramesDelete)
	t.Run("GameEvents", testGameEventsDelete)
	t.Run("GamePicks", testGamePicksDelete)
	t.Run("GamePowerups", testGamePowerupsDelete)
	t.Run("GameSeasons", testGameSeasonsDelete)
	t.Run("GameWeekDivisions", testGameWeekDivisionsDelete)
	t.Run("GameWeeks", testGameWeeksDelete)
	t.Run("Games", testGamesDelete)
	t.Run("Items", testItemsDelete)
	t.Run("LeaderboardTypes", testLeaderboardTypesDelete)
	t.Run("Leaderboards", testLeaderboardsDelete)
	t.Run("ManualSubscriptions", testManualSubscriptionsDelete)
	t.Run("MatchDays", testMatchDaysDelete)
	t.Run("MatchEventProcessors", testMatchEventProcessorsDelete)
	t.Run("MatchEventSimulations", testMatchEventSimulationsDelete)
	t.Run("MatchEvents", testMatchEventsDelete)
	t.Run("MatchHeadlines", testMatchHeadlinesDelete)
	t.Run("MatchLeaderboards", testMatchLeaderboardsDelete)
	t.Run("MatchNotifications", testMatchNotificationsDelete)
	t.Run("MatchPlayers", testMatchPlayersDelete)
	t.Run("MatchRewards", testMatchRewardsDelete)
	t.Run("Matches", testMatchesDelete)
	t.Run("NFTBuckets", testNFTBucketsDelete)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsDelete)
	t.Run("OptaFeedItems", testOptaFeedItemsDelete)
	t.Run("OptaFeeds", testOptaFeedsDelete)
	t.Run("Orders", testOrdersDelete)
	t.Run("PlayerBuckets", testPlayerBucketsDelete)
	t.Run("Players", testPlayersDelete)
	t.Run("PowerupActions", testPowerupActionsDelete)
	t.Run("Powerups", testPowerupsDelete)
	t.Run("PushNotifications", testPushNotificationsDelete)
	t.Run("Regions", testRegionsDelete)
	t.Run("Rewards", testRewardsDelete)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersDelete)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersDelete)
	t.Run("Seasons", testSeasonsDelete)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersDelete)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersDelete)
	t.Run("Sports", testSportsDelete)
	t.Run("StoreProductTransactions", testStoreProductTransactionsDelete)
	t.Run("StoreProducts", testStoreProductsDelete)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesDelete)
	t.Run("SubscriptionRequests", testSubscriptionRequestsDelete)
	t.Run("Subscriptions", testSubscriptionsDelete)
	t.Run("Teams", testTeamsDelete)
	t.Run("Transactions", testTransactionsDelete)
	t.Run("UserBadges", testUserBadgesDelete)
	t.Run("UserBanners", testUserBannersDelete)
	t.Run("UserDivisions", testUserDivisionsDelete)
	t.Run("UserFrames", testUserFramesDelete)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesDelete)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsDelete)
	t.Run("Users", testUsersDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("Actions", testActionsQueryDeleteAll)
	t.Run("AmqpEvents", testAmqpEventsQueryDeleteAll)
	t.Run("AppInboxes", testAppInboxesQueryDeleteAll)
	t.Run("AssignedCardPacks", testAssignedCardPacksQueryDeleteAll)
	t.Run("AssignedPlayers", testAssignedPlayersQueryDeleteAll)
	t.Run("AuthGroups", testAuthGroupsQueryDeleteAll)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsQueryDeleteAll)
	t.Run("AuthPermissions", testAuthPermissionsQueryDeleteAll)
	t.Run("AuthUsers", testAuthUsersQueryDeleteAll)
	t.Run("AuthUserGroups", testAuthUserGroupsQueryDeleteAll)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsQueryDeleteAll)
	t.Run("Badges", testBadgesQueryDeleteAll)
	t.Run("BanPenalties", testBanPenaltiesQueryDeleteAll)
	t.Run("Banners", testBannersQueryDeleteAll)
	t.Run("CardPackTypes", testCardPackTypesQueryDeleteAll)
	t.Run("ChatMessages", testChatMessagesQueryDeleteAll)
	t.Run("ChatRoomMembers", testChatRoomMembersQueryDeleteAll)
	t.Run("ChatRooms", testChatRoomsQueryDeleteAll)
	t.Run("CompetitionConfigs", testCompetitionConfigsQueryDeleteAll)
	t.Run("CompetitionEditions", testCompetitionEditionsQueryDeleteAll)
	t.Run("CompetitionPhases", testCompetitionPhasesQueryDeleteAll)
	t.Run("Competitions", testCompetitionsQueryDeleteAll)
	t.Run("Countries", testCountriesQueryDeleteAll)
	t.Run("DivisionRewards", testDivisionRewardsQueryDeleteAll)
	t.Run("Divisions", testDivisionsQueryDeleteAll)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsQueryDeleteAll)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesQueryDeleteAll)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesQueryDeleteAll)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesQueryDeleteAll)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksQueryDeleteAll)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksQueryDeleteAll)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesQueryDeleteAll)
	t.Run("DjangoContentTypes", testDjangoContentTypesQueryDeleteAll)
	t.Run("DjangoMigrations", testDjangoMigrationsQueryDeleteAll)
	t.Run("DjangoSessions", testDjangoSessionsQueryDeleteAll)
	t.Run("FanclashCaches", testFanclashCachesQueryDeleteAll)
	t.Run("Followers", testFollowersQueryDeleteAll)
	t.Run("Frames", testFramesQueryDeleteAll)
	t.Run("GameEvents", testGameEventsQueryDeleteAll)
	t.Run("GamePicks", testGamePicksQueryDeleteAll)
	t.Run("GamePowerups", testGamePowerupsQueryDeleteAll)
	t.Run("GameSeasons", testGameSeasonsQueryDeleteAll)
	t.Run("GameWeekDivisions", testGameWeekDivisionsQueryDeleteAll)
	t.Run("GameWeeks", testGameWeeksQueryDeleteAll)
	t.Run("Games", testGamesQueryDeleteAll)
	t.Run("Items", testItemsQueryDeleteAll)
	t.Run("LeaderboardTypes", testLeaderboardTypesQueryDeleteAll)
	t.Run("Leaderboards", testLeaderboardsQueryDeleteAll)
	t.Run("ManualSubscriptions", testManualSubscriptionsQueryDeleteAll)
	t.Run("MatchDays", testMatchDaysQueryDeleteAll)
	t.Run("MatchEventProcessors", testMatchEventProcessorsQueryDeleteAll)
	t.Run("MatchEventSimulations", testMatchEventSimulationsQueryDeleteAll)
	t.Run("MatchEvents", testMatchEventsQueryDeleteAll)
	t.Run("MatchHeadlines", testMatchHeadlinesQueryDeleteAll)
	t.Run("MatchLeaderboards", testMatchLeaderboardsQueryDeleteAll)
	t.Run("MatchNotifications", testMatchNotificationsQueryDeleteAll)
	t.Run("MatchPlayers", testMatchPlayersQueryDeleteAll)
	t.Run("MatchRewards", testMatchRewardsQueryDeleteAll)
	t.Run("Matches", testMatchesQueryDeleteAll)
	t.Run("NFTBuckets", testNFTBucketsQueryDeleteAll)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsQueryDeleteAll)
	t.Run("OptaFeedItems", testOptaFeedItemsQueryDeleteAll)
	t.Run("OptaFeeds", testOptaFeedsQueryDeleteAll)
	t.Run("Orders", testOrdersQueryDeleteAll)
	t.Run("PlayerBuckets", testPlayerBucketsQueryDeleteAll)
	t.Run("Players", testPlayersQueryDeleteAll)
	t.Run("PowerupActions", testPowerupActionsQueryDeleteAll)
	t.Run("Powerups", testPowerupsQueryDeleteAll)
	t.Run("PushNotifications", testPushNotificationsQueryDeleteAll)
	t.Run("Regions", testRegionsQueryDeleteAll)
	t.Run("Rewards", testRewardsQueryDeleteAll)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersQueryDeleteAll)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersQueryDeleteAll)
	t.Run("Seasons", testSeasonsQueryDeleteAll)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersQueryDeleteAll)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersQueryDeleteAll)
	t.Run("Sports", testSportsQueryDeleteAll)
	t.Run("StoreProductTransactions", testStoreProductTransactionsQueryDeleteAll)
	t.Run("StoreProducts", testStoreProductsQueryDeleteAll)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesQueryDeleteAll)
	t.Run("SubscriptionRequests", testSubscriptionRequestsQueryDeleteAll)
	t.Run("Subscriptions", testSubscriptionsQueryDeleteAll)
	t.Run("Teams", testTeamsQueryDeleteAll)
	t.Run("Transactions", testTransactionsQueryDeleteAll)
	t.Run("UserBadges", testUserBadgesQueryDeleteAll)
	t.Run("UserBanners", testUserBannersQueryDeleteAll)
	t.Run("UserDivisions", testUserDivisionsQueryDeleteAll)
	t.Run("UserFrames", testUserFramesQueryDeleteAll)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesQueryDeleteAll)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsQueryDeleteAll)
	t.Run("Users", testUsersQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("Actions", testActionsSliceDeleteAll)
	t.Run("AmqpEvents", testAmqpEventsSliceDeleteAll)
	t.Run("AppInboxes", testAppInboxesSliceDeleteAll)
	t.Run("AssignedCardPacks", testAssignedCardPacksSliceDeleteAll)
	t.Run("AssignedPlayers", testAssignedPlayersSliceDeleteAll)
	t.Run("AuthGroups", testAuthGroupsSliceDeleteAll)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsSliceDeleteAll)
	t.Run("AuthPermissions", testAuthPermissionsSliceDeleteAll)
	t.Run("AuthUsers", testAuthUsersSliceDeleteAll)
	t.Run("AuthUserGroups", testAuthUserGroupsSliceDeleteAll)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsSliceDeleteAll)
	t.Run("Badges", testBadgesSliceDeleteAll)
	t.Run("BanPenalties", testBanPenaltiesSliceDeleteAll)
	t.Run("Banners", testBannersSliceDeleteAll)
	t.Run("CardPackTypes", testCardPackTypesSliceDeleteAll)
	t.Run("ChatMessages", testChatMessagesSliceDeleteAll)
	t.Run("ChatRoomMembers", testChatRoomMembersSliceDeleteAll)
	t.Run("ChatRooms", testChatRoomsSliceDeleteAll)
	t.Run("CompetitionConfigs", testCompetitionConfigsSliceDeleteAll)
	t.Run("CompetitionEditions", testCompetitionEditionsSliceDeleteAll)
	t.Run("CompetitionPhases", testCompetitionPhasesSliceDeleteAll)
	t.Run("Competitions", testCompetitionsSliceDeleteAll)
	t.Run("Countries", testCountriesSliceDeleteAll)
	t.Run("DivisionRewards", testDivisionRewardsSliceDeleteAll)
	t.Run("Divisions", testDivisionsSliceDeleteAll)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsSliceDeleteAll)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesSliceDeleteAll)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesSliceDeleteAll)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesSliceDeleteAll)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksSliceDeleteAll)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksSliceDeleteAll)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesSliceDeleteAll)
	t.Run("DjangoContentTypes", testDjangoContentTypesSliceDeleteAll)
	t.Run("DjangoMigrations", testDjangoMigrationsSliceDeleteAll)
	t.Run("DjangoSessions", testDjangoSessionsSliceDeleteAll)
	t.Run("FanclashCaches", testFanclashCachesSliceDeleteAll)
	t.Run("Followers", testFollowersSliceDeleteAll)
	t.Run("Frames", testFramesSliceDeleteAll)
	t.Run("GameEvents", testGameEventsSliceDeleteAll)
	t.Run("GamePicks", testGamePicksSliceDeleteAll)
	t.Run("GamePowerups", testGamePowerupsSliceDeleteAll)
	t.Run("GameSeasons", testGameSeasonsSliceDeleteAll)
	t.Run("GameWeekDivisions", testGameWeekDivisionsSliceDeleteAll)
	t.Run("GameWeeks", testGameWeeksSliceDeleteAll)
	t.Run("Games", testGamesSliceDeleteAll)
	t.Run("Items", testItemsSliceDeleteAll)
	t.Run("LeaderboardTypes", testLeaderboardTypesSliceDeleteAll)
	t.Run("Leaderboards", testLeaderboardsSliceDeleteAll)
	t.Run("ManualSubscriptions", testManualSubscriptionsSliceDeleteAll)
	t.Run("MatchDays", testMatchDaysSliceDeleteAll)
	t.Run("MatchEventProcessors", testMatchEventProcessorsSliceDeleteAll)
	t.Run("MatchEventSimulations", testMatchEventSimulationsSliceDeleteAll)
	t.Run("MatchEvents", testMatchEventsSliceDeleteAll)
	t.Run("MatchHeadlines", testMatchHeadlinesSliceDeleteAll)
	t.Run("MatchLeaderboards", testMatchLeaderboardsSliceDeleteAll)
	t.Run("MatchNotifications", testMatchNotificationsSliceDeleteAll)
	t.Run("MatchPlayers", testMatchPlayersSliceDeleteAll)
	t.Run("MatchRewards", testMatchRewardsSliceDeleteAll)
	t.Run("Matches", testMatchesSliceDeleteAll)
	t.Run("NFTBuckets", testNFTBucketsSliceDeleteAll)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsSliceDeleteAll)
	t.Run("OptaFeedItems", testOptaFeedItemsSliceDeleteAll)
	t.Run("OptaFeeds", testOptaFeedsSliceDeleteAll)
	t.Run("Orders", testOrdersSliceDeleteAll)
	t.Run("PlayerBuckets", testPlayerBucketsSliceDeleteAll)
	t.Run("Players", testPlayersSliceDeleteAll)
	t.Run("PowerupActions", testPowerupActionsSliceDeleteAll)
	t.Run("Powerups", testPowerupsSliceDeleteAll)
	t.Run("PushNotifications", testPushNotificationsSliceDeleteAll)
	t.Run("Regions", testRegionsSliceDeleteAll)
	t.Run("Rewards", testRewardsSliceDeleteAll)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersSliceDeleteAll)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersSliceDeleteAll)
	t.Run("Seasons", testSeasonsSliceDeleteAll)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersSliceDeleteAll)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersSliceDeleteAll)
	t.Run("Sports", testSportsSliceDeleteAll)
	t.Run("StoreProductTransactions", testStoreProductTransactionsSliceDeleteAll)
	t.Run("StoreProducts", testStoreProductsSliceDeleteAll)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesSliceDeleteAll)
	t.Run("SubscriptionRequests", testSubscriptionRequestsSliceDeleteAll)
	t.Run("Subscriptions", testSubscriptionsSliceDeleteAll)
	t.Run("Teams", testTeamsSliceDeleteAll)
	t.Run("Transactions", testTransactionsSliceDeleteAll)
	t.Run("UserBadges", testUserBadgesSliceDeleteAll)
	t.Run("UserBanners", testUserBannersSliceDeleteAll)
	t.Run("UserDivisions", testUserDivisionsSliceDeleteAll)
	t.Run("UserFrames", testUserFramesSliceDeleteAll)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesSliceDeleteAll)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsSliceDeleteAll)
	t.Run("Users", testUsersSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("Actions", testActionsExists)
	t.Run("AmqpEvents", testAmqpEventsExists)
	t.Run("AppInboxes", testAppInboxesExists)
	t.Run("AssignedCardPacks", testAssignedCardPacksExists)
	t.Run("AssignedPlayers", testAssignedPlayersExists)
	t.Run("AuthGroups", testAuthGroupsExists)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsExists)
	t.Run("AuthPermissions", testAuthPermissionsExists)
	t.Run("AuthUsers", testAuthUsersExists)
	t.Run("AuthUserGroups", testAuthUserGroupsExists)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsExists)
	t.Run("Badges", testBadgesExists)
	t.Run("BanPenalties", testBanPenaltiesExists)
	t.Run("Banners", testBannersExists)
	t.Run("CardPackTypes", testCardPackTypesExists)
	t.Run("ChatMessages", testChatMessagesExists)
	t.Run("ChatRoomMembers", testChatRoomMembersExists)
	t.Run("ChatRooms", testChatRoomsExists)
	t.Run("CompetitionConfigs", testCompetitionConfigsExists)
	t.Run("CompetitionEditions", testCompetitionEditionsExists)
	t.Run("CompetitionPhases", testCompetitionPhasesExists)
	t.Run("Competitions", testCompetitionsExists)
	t.Run("Countries", testCountriesExists)
	t.Run("DivisionRewards", testDivisionRewardsExists)
	t.Run("Divisions", testDivisionsExists)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsExists)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesExists)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesExists)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesExists)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksExists)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksExists)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesExists)
	t.Run("DjangoContentTypes", testDjangoContentTypesExists)
	t.Run("DjangoMigrations", testDjangoMigrationsExists)
	t.Run("DjangoSessions", testDjangoSessionsExists)
	t.Run("FanclashCaches", testFanclashCachesExists)
	t.Run("Followers", testFollowersExists)
	t.Run("Frames", testFramesExists)
	t.Run("GameEvents", testGameEventsExists)
	t.Run("GamePicks", testGamePicksExists)
	t.Run("GamePowerups", testGamePowerupsExists)
	t.Run("GameSeasons", testGameSeasonsExists)
	t.Run("GameWeekDivisions", testGameWeekDivisionsExists)
	t.Run("GameWeeks", testGameWeeksExists)
	t.Run("Games", testGamesExists)
	t.Run("Items", testItemsExists)
	t.Run("LeaderboardTypes", testLeaderboardTypesExists)
	t.Run("Leaderboards", testLeaderboardsExists)
	t.Run("ManualSubscriptions", testManualSubscriptionsExists)
	t.Run("MatchDays", testMatchDaysExists)
	t.Run("MatchEventProcessors", testMatchEventProcessorsExists)
	t.Run("MatchEventSimulations", testMatchEventSimulationsExists)
	t.Run("MatchEvents", testMatchEventsExists)
	t.Run("MatchHeadlines", testMatchHeadlinesExists)
	t.Run("MatchLeaderboards", testMatchLeaderboardsExists)
	t.Run("MatchNotifications", testMatchNotificationsExists)
	t.Run("MatchPlayers", testMatchPlayersExists)
	t.Run("MatchRewards", testMatchRewardsExists)
	t.Run("Matches", testMatchesExists)
	t.Run("NFTBuckets", testNFTBucketsExists)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsExists)
	t.Run("OptaFeedItems", testOptaFeedItemsExists)
	t.Run("OptaFeeds", testOptaFeedsExists)
	t.Run("Orders", testOrdersExists)
	t.Run("PlayerBuckets", testPlayerBucketsExists)
	t.Run("Players", testPlayersExists)
	t.Run("PowerupActions", testPowerupActionsExists)
	t.Run("Powerups", testPowerupsExists)
	t.Run("PushNotifications", testPushNotificationsExists)
	t.Run("Regions", testRegionsExists)
	t.Run("Rewards", testRewardsExists)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersExists)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersExists)
	t.Run("Seasons", testSeasonsExists)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersExists)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersExists)
	t.Run("Sports", testSportsExists)
	t.Run("StoreProductTransactions", testStoreProductTransactionsExists)
	t.Run("StoreProducts", testStoreProductsExists)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesExists)
	t.Run("SubscriptionRequests", testSubscriptionRequestsExists)
	t.Run("Subscriptions", testSubscriptionsExists)
	t.Run("Teams", testTeamsExists)
	t.Run("Transactions", testTransactionsExists)
	t.Run("UserBadges", testUserBadgesExists)
	t.Run("UserBanners", testUserBannersExists)
	t.Run("UserDivisions", testUserDivisionsExists)
	t.Run("UserFrames", testUserFramesExists)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesExists)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsExists)
	t.Run("Users", testUsersExists)
}

func TestFind(t *testing.T) {
	t.Run("Actions", testActionsFind)
	t.Run("AmqpEvents", testAmqpEventsFind)
	t.Run("AppInboxes", testAppInboxesFind)
	t.Run("AssignedCardPacks", testAssignedCardPacksFind)
	t.Run("AssignedPlayers", testAssignedPlayersFind)
	t.Run("AuthGroups", testAuthGroupsFind)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsFind)
	t.Run("AuthPermissions", testAuthPermissionsFind)
	t.Run("AuthUsers", testAuthUsersFind)
	t.Run("AuthUserGroups", testAuthUserGroupsFind)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsFind)
	t.Run("Badges", testBadgesFind)
	t.Run("BanPenalties", testBanPenaltiesFind)
	t.Run("Banners", testBannersFind)
	t.Run("CardPackTypes", testCardPackTypesFind)
	t.Run("ChatMessages", testChatMessagesFind)
	t.Run("ChatRoomMembers", testChatRoomMembersFind)
	t.Run("ChatRooms", testChatRoomsFind)
	t.Run("CompetitionConfigs", testCompetitionConfigsFind)
	t.Run("CompetitionEditions", testCompetitionEditionsFind)
	t.Run("CompetitionPhases", testCompetitionPhasesFind)
	t.Run("Competitions", testCompetitionsFind)
	t.Run("Countries", testCountriesFind)
	t.Run("DivisionRewards", testDivisionRewardsFind)
	t.Run("Divisions", testDivisionsFind)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsFind)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesFind)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesFind)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesFind)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksFind)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksFind)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesFind)
	t.Run("DjangoContentTypes", testDjangoContentTypesFind)
	t.Run("DjangoMigrations", testDjangoMigrationsFind)
	t.Run("DjangoSessions", testDjangoSessionsFind)
	t.Run("FanclashCaches", testFanclashCachesFind)
	t.Run("Followers", testFollowersFind)
	t.Run("Frames", testFramesFind)
	t.Run("GameEvents", testGameEventsFind)
	t.Run("GamePicks", testGamePicksFind)
	t.Run("GamePowerups", testGamePowerupsFind)
	t.Run("GameSeasons", testGameSeasonsFind)
	t.Run("GameWeekDivisions", testGameWeekDivisionsFind)
	t.Run("GameWeeks", testGameWeeksFind)
	t.Run("Games", testGamesFind)
	t.Run("Items", testItemsFind)
	t.Run("LeaderboardTypes", testLeaderboardTypesFind)
	t.Run("Leaderboards", testLeaderboardsFind)
	t.Run("ManualSubscriptions", testManualSubscriptionsFind)
	t.Run("MatchDays", testMatchDaysFind)
	t.Run("MatchEventProcessors", testMatchEventProcessorsFind)
	t.Run("MatchEventSimulations", testMatchEventSimulationsFind)
	t.Run("MatchEvents", testMatchEventsFind)
	t.Run("MatchHeadlines", testMatchHeadlinesFind)
	t.Run("MatchLeaderboards", testMatchLeaderboardsFind)
	t.Run("MatchNotifications", testMatchNotificationsFind)
	t.Run("MatchPlayers", testMatchPlayersFind)
	t.Run("MatchRewards", testMatchRewardsFind)
	t.Run("Matches", testMatchesFind)
	t.Run("NFTBuckets", testNFTBucketsFind)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsFind)
	t.Run("OptaFeedItems", testOptaFeedItemsFind)
	t.Run("OptaFeeds", testOptaFeedsFind)
	t.Run("Orders", testOrdersFind)
	t.Run("PlayerBuckets", testPlayerBucketsFind)
	t.Run("Players", testPlayersFind)
	t.Run("PowerupActions", testPowerupActionsFind)
	t.Run("Powerups", testPowerupsFind)
	t.Run("PushNotifications", testPushNotificationsFind)
	t.Run("Regions", testRegionsFind)
	t.Run("Rewards", testRewardsFind)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersFind)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersFind)
	t.Run("Seasons", testSeasonsFind)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersFind)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersFind)
	t.Run("Sports", testSportsFind)
	t.Run("StoreProductTransactions", testStoreProductTransactionsFind)
	t.Run("StoreProducts", testStoreProductsFind)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesFind)
	t.Run("SubscriptionRequests", testSubscriptionRequestsFind)
	t.Run("Subscriptions", testSubscriptionsFind)
	t.Run("Teams", testTeamsFind)
	t.Run("Transactions", testTransactionsFind)
	t.Run("UserBadges", testUserBadgesFind)
	t.Run("UserBanners", testUserBannersFind)
	t.Run("UserDivisions", testUserDivisionsFind)
	t.Run("UserFrames", testUserFramesFind)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesFind)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsFind)
	t.Run("Users", testUsersFind)
}

func TestBind(t *testing.T) {
	t.Run("Actions", testActionsBind)
	t.Run("AmqpEvents", testAmqpEventsBind)
	t.Run("AppInboxes", testAppInboxesBind)
	t.Run("AssignedCardPacks", testAssignedCardPacksBind)
	t.Run("AssignedPlayers", testAssignedPlayersBind)
	t.Run("AuthGroups", testAuthGroupsBind)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsBind)
	t.Run("AuthPermissions", testAuthPermissionsBind)
	t.Run("AuthUsers", testAuthUsersBind)
	t.Run("AuthUserGroups", testAuthUserGroupsBind)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsBind)
	t.Run("Badges", testBadgesBind)
	t.Run("BanPenalties", testBanPenaltiesBind)
	t.Run("Banners", testBannersBind)
	t.Run("CardPackTypes", testCardPackTypesBind)
	t.Run("ChatMessages", testChatMessagesBind)
	t.Run("ChatRoomMembers", testChatRoomMembersBind)
	t.Run("ChatRooms", testChatRoomsBind)
	t.Run("CompetitionConfigs", testCompetitionConfigsBind)
	t.Run("CompetitionEditions", testCompetitionEditionsBind)
	t.Run("CompetitionPhases", testCompetitionPhasesBind)
	t.Run("Competitions", testCompetitionsBind)
	t.Run("Countries", testCountriesBind)
	t.Run("DivisionRewards", testDivisionRewardsBind)
	t.Run("Divisions", testDivisionsBind)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsBind)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesBind)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesBind)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesBind)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksBind)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksBind)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesBind)
	t.Run("DjangoContentTypes", testDjangoContentTypesBind)
	t.Run("DjangoMigrations", testDjangoMigrationsBind)
	t.Run("DjangoSessions", testDjangoSessionsBind)
	t.Run("FanclashCaches", testFanclashCachesBind)
	t.Run("Followers", testFollowersBind)
	t.Run("Frames", testFramesBind)
	t.Run("GameEvents", testGameEventsBind)
	t.Run("GamePicks", testGamePicksBind)
	t.Run("GamePowerups", testGamePowerupsBind)
	t.Run("GameSeasons", testGameSeasonsBind)
	t.Run("GameWeekDivisions", testGameWeekDivisionsBind)
	t.Run("GameWeeks", testGameWeeksBind)
	t.Run("Games", testGamesBind)
	t.Run("Items", testItemsBind)
	t.Run("LeaderboardTypes", testLeaderboardTypesBind)
	t.Run("Leaderboards", testLeaderboardsBind)
	t.Run("ManualSubscriptions", testManualSubscriptionsBind)
	t.Run("MatchDays", testMatchDaysBind)
	t.Run("MatchEventProcessors", testMatchEventProcessorsBind)
	t.Run("MatchEventSimulations", testMatchEventSimulationsBind)
	t.Run("MatchEvents", testMatchEventsBind)
	t.Run("MatchHeadlines", testMatchHeadlinesBind)
	t.Run("MatchLeaderboards", testMatchLeaderboardsBind)
	t.Run("MatchNotifications", testMatchNotificationsBind)
	t.Run("MatchPlayers", testMatchPlayersBind)
	t.Run("MatchRewards", testMatchRewardsBind)
	t.Run("Matches", testMatchesBind)
	t.Run("NFTBuckets", testNFTBucketsBind)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsBind)
	t.Run("OptaFeedItems", testOptaFeedItemsBind)
	t.Run("OptaFeeds", testOptaFeedsBind)
	t.Run("Orders", testOrdersBind)
	t.Run("PlayerBuckets", testPlayerBucketsBind)
	t.Run("Players", testPlayersBind)
	t.Run("PowerupActions", testPowerupActionsBind)
	t.Run("Powerups", testPowerupsBind)
	t.Run("PushNotifications", testPushNotificationsBind)
	t.Run("Regions", testRegionsBind)
	t.Run("Rewards", testRewardsBind)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersBind)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersBind)
	t.Run("Seasons", testSeasonsBind)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersBind)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersBind)
	t.Run("Sports", testSportsBind)
	t.Run("StoreProductTransactions", testStoreProductTransactionsBind)
	t.Run("StoreProducts", testStoreProductsBind)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesBind)
	t.Run("SubscriptionRequests", testSubscriptionRequestsBind)
	t.Run("Subscriptions", testSubscriptionsBind)
	t.Run("Teams", testTeamsBind)
	t.Run("Transactions", testTransactionsBind)
	t.Run("UserBadges", testUserBadgesBind)
	t.Run("UserBanners", testUserBannersBind)
	t.Run("UserDivisions", testUserDivisionsBind)
	t.Run("UserFrames", testUserFramesBind)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesBind)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsBind)
	t.Run("Users", testUsersBind)
}

func TestOne(t *testing.T) {
	t.Run("Actions", testActionsOne)
	t.Run("AmqpEvents", testAmqpEventsOne)
	t.Run("AppInboxes", testAppInboxesOne)
	t.Run("AssignedCardPacks", testAssignedCardPacksOne)
	t.Run("AssignedPlayers", testAssignedPlayersOne)
	t.Run("AuthGroups", testAuthGroupsOne)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsOne)
	t.Run("AuthPermissions", testAuthPermissionsOne)
	t.Run("AuthUsers", testAuthUsersOne)
	t.Run("AuthUserGroups", testAuthUserGroupsOne)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsOne)
	t.Run("Badges", testBadgesOne)
	t.Run("BanPenalties", testBanPenaltiesOne)
	t.Run("Banners", testBannersOne)
	t.Run("CardPackTypes", testCardPackTypesOne)
	t.Run("ChatMessages", testChatMessagesOne)
	t.Run("ChatRoomMembers", testChatRoomMembersOne)
	t.Run("ChatRooms", testChatRoomsOne)
	t.Run("CompetitionConfigs", testCompetitionConfigsOne)
	t.Run("CompetitionEditions", testCompetitionEditionsOne)
	t.Run("CompetitionPhases", testCompetitionPhasesOne)
	t.Run("Competitions", testCompetitionsOne)
	t.Run("Countries", testCountriesOne)
	t.Run("DivisionRewards", testDivisionRewardsOne)
	t.Run("Divisions", testDivisionsOne)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsOne)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesOne)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesOne)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesOne)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksOne)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksOne)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesOne)
	t.Run("DjangoContentTypes", testDjangoContentTypesOne)
	t.Run("DjangoMigrations", testDjangoMigrationsOne)
	t.Run("DjangoSessions", testDjangoSessionsOne)
	t.Run("FanclashCaches", testFanclashCachesOne)
	t.Run("Followers", testFollowersOne)
	t.Run("Frames", testFramesOne)
	t.Run("GameEvents", testGameEventsOne)
	t.Run("GamePicks", testGamePicksOne)
	t.Run("GamePowerups", testGamePowerupsOne)
	t.Run("GameSeasons", testGameSeasonsOne)
	t.Run("GameWeekDivisions", testGameWeekDivisionsOne)
	t.Run("GameWeeks", testGameWeeksOne)
	t.Run("Games", testGamesOne)
	t.Run("Items", testItemsOne)
	t.Run("LeaderboardTypes", testLeaderboardTypesOne)
	t.Run("Leaderboards", testLeaderboardsOne)
	t.Run("ManualSubscriptions", testManualSubscriptionsOne)
	t.Run("MatchDays", testMatchDaysOne)
	t.Run("MatchEventProcessors", testMatchEventProcessorsOne)
	t.Run("MatchEventSimulations", testMatchEventSimulationsOne)
	t.Run("MatchEvents", testMatchEventsOne)
	t.Run("MatchHeadlines", testMatchHeadlinesOne)
	t.Run("MatchLeaderboards", testMatchLeaderboardsOne)
	t.Run("MatchNotifications", testMatchNotificationsOne)
	t.Run("MatchPlayers", testMatchPlayersOne)
	t.Run("MatchRewards", testMatchRewardsOne)
	t.Run("Matches", testMatchesOne)
	t.Run("NFTBuckets", testNFTBucketsOne)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsOne)
	t.Run("OptaFeedItems", testOptaFeedItemsOne)
	t.Run("OptaFeeds", testOptaFeedsOne)
	t.Run("Orders", testOrdersOne)
	t.Run("PlayerBuckets", testPlayerBucketsOne)
	t.Run("Players", testPlayersOne)
	t.Run("PowerupActions", testPowerupActionsOne)
	t.Run("Powerups", testPowerupsOne)
	t.Run("PushNotifications", testPushNotificationsOne)
	t.Run("Regions", testRegionsOne)
	t.Run("Rewards", testRewardsOne)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersOne)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersOne)
	t.Run("Seasons", testSeasonsOne)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersOne)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersOne)
	t.Run("Sports", testSportsOne)
	t.Run("StoreProductTransactions", testStoreProductTransactionsOne)
	t.Run("StoreProducts", testStoreProductsOne)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesOne)
	t.Run("SubscriptionRequests", testSubscriptionRequestsOne)
	t.Run("Subscriptions", testSubscriptionsOne)
	t.Run("Teams", testTeamsOne)
	t.Run("Transactions", testTransactionsOne)
	t.Run("UserBadges", testUserBadgesOne)
	t.Run("UserBanners", testUserBannersOne)
	t.Run("UserDivisions", testUserDivisionsOne)
	t.Run("UserFrames", testUserFramesOne)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesOne)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsOne)
	t.Run("Users", testUsersOne)
}

func TestAll(t *testing.T) {
	t.Run("Actions", testActionsAll)
	t.Run("AmqpEvents", testAmqpEventsAll)
	t.Run("AppInboxes", testAppInboxesAll)
	t.Run("AssignedCardPacks", testAssignedCardPacksAll)
	t.Run("AssignedPlayers", testAssignedPlayersAll)
	t.Run("AuthGroups", testAuthGroupsAll)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsAll)
	t.Run("AuthPermissions", testAuthPermissionsAll)
	t.Run("AuthUsers", testAuthUsersAll)
	t.Run("AuthUserGroups", testAuthUserGroupsAll)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsAll)
	t.Run("Badges", testBadgesAll)
	t.Run("BanPenalties", testBanPenaltiesAll)
	t.Run("Banners", testBannersAll)
	t.Run("CardPackTypes", testCardPackTypesAll)
	t.Run("ChatMessages", testChatMessagesAll)
	t.Run("ChatRoomMembers", testChatRoomMembersAll)
	t.Run("ChatRooms", testChatRoomsAll)
	t.Run("CompetitionConfigs", testCompetitionConfigsAll)
	t.Run("CompetitionEditions", testCompetitionEditionsAll)
	t.Run("CompetitionPhases", testCompetitionPhasesAll)
	t.Run("Competitions", testCompetitionsAll)
	t.Run("Countries", testCountriesAll)
	t.Run("DivisionRewards", testDivisionRewardsAll)
	t.Run("Divisions", testDivisionsAll)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsAll)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesAll)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesAll)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesAll)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksAll)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksAll)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesAll)
	t.Run("DjangoContentTypes", testDjangoContentTypesAll)
	t.Run("DjangoMigrations", testDjangoMigrationsAll)
	t.Run("DjangoSessions", testDjangoSessionsAll)
	t.Run("FanclashCaches", testFanclashCachesAll)
	t.Run("Followers", testFollowersAll)
	t.Run("Frames", testFramesAll)
	t.Run("GameEvents", testGameEventsAll)
	t.Run("GamePicks", testGamePicksAll)
	t.Run("GamePowerups", testGamePowerupsAll)
	t.Run("GameSeasons", testGameSeasonsAll)
	t.Run("GameWeekDivisions", testGameWeekDivisionsAll)
	t.Run("GameWeeks", testGameWeeksAll)
	t.Run("Games", testGamesAll)
	t.Run("Items", testItemsAll)
	t.Run("LeaderboardTypes", testLeaderboardTypesAll)
	t.Run("Leaderboards", testLeaderboardsAll)
	t.Run("ManualSubscriptions", testManualSubscriptionsAll)
	t.Run("MatchDays", testMatchDaysAll)
	t.Run("MatchEventProcessors", testMatchEventProcessorsAll)
	t.Run("MatchEventSimulations", testMatchEventSimulationsAll)
	t.Run("MatchEvents", testMatchEventsAll)
	t.Run("MatchHeadlines", testMatchHeadlinesAll)
	t.Run("MatchLeaderboards", testMatchLeaderboardsAll)
	t.Run("MatchNotifications", testMatchNotificationsAll)
	t.Run("MatchPlayers", testMatchPlayersAll)
	t.Run("MatchRewards", testMatchRewardsAll)
	t.Run("Matches", testMatchesAll)
	t.Run("NFTBuckets", testNFTBucketsAll)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsAll)
	t.Run("OptaFeedItems", testOptaFeedItemsAll)
	t.Run("OptaFeeds", testOptaFeedsAll)
	t.Run("Orders", testOrdersAll)
	t.Run("PlayerBuckets", testPlayerBucketsAll)
	t.Run("Players", testPlayersAll)
	t.Run("PowerupActions", testPowerupActionsAll)
	t.Run("Powerups", testPowerupsAll)
	t.Run("PushNotifications", testPushNotificationsAll)
	t.Run("Regions", testRegionsAll)
	t.Run("Rewards", testRewardsAll)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersAll)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersAll)
	t.Run("Seasons", testSeasonsAll)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersAll)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersAll)
	t.Run("Sports", testSportsAll)
	t.Run("StoreProductTransactions", testStoreProductTransactionsAll)
	t.Run("StoreProducts", testStoreProductsAll)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesAll)
	t.Run("SubscriptionRequests", testSubscriptionRequestsAll)
	t.Run("Subscriptions", testSubscriptionsAll)
	t.Run("Teams", testTeamsAll)
	t.Run("Transactions", testTransactionsAll)
	t.Run("UserBadges", testUserBadgesAll)
	t.Run("UserBanners", testUserBannersAll)
	t.Run("UserDivisions", testUserDivisionsAll)
	t.Run("UserFrames", testUserFramesAll)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesAll)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsAll)
	t.Run("Users", testUsersAll)
}

func TestCount(t *testing.T) {
	t.Run("Actions", testActionsCount)
	t.Run("AmqpEvents", testAmqpEventsCount)
	t.Run("AppInboxes", testAppInboxesCount)
	t.Run("AssignedCardPacks", testAssignedCardPacksCount)
	t.Run("AssignedPlayers", testAssignedPlayersCount)
	t.Run("AuthGroups", testAuthGroupsCount)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsCount)
	t.Run("AuthPermissions", testAuthPermissionsCount)
	t.Run("AuthUsers", testAuthUsersCount)
	t.Run("AuthUserGroups", testAuthUserGroupsCount)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsCount)
	t.Run("Badges", testBadgesCount)
	t.Run("BanPenalties", testBanPenaltiesCount)
	t.Run("Banners", testBannersCount)
	t.Run("CardPackTypes", testCardPackTypesCount)
	t.Run("ChatMessages", testChatMessagesCount)
	t.Run("ChatRoomMembers", testChatRoomMembersCount)
	t.Run("ChatRooms", testChatRoomsCount)
	t.Run("CompetitionConfigs", testCompetitionConfigsCount)
	t.Run("CompetitionEditions", testCompetitionEditionsCount)
	t.Run("CompetitionPhases", testCompetitionPhasesCount)
	t.Run("Competitions", testCompetitionsCount)
	t.Run("Countries", testCountriesCount)
	t.Run("DivisionRewards", testDivisionRewardsCount)
	t.Run("Divisions", testDivisionsCount)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsCount)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesCount)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesCount)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesCount)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksCount)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksCount)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesCount)
	t.Run("DjangoContentTypes", testDjangoContentTypesCount)
	t.Run("DjangoMigrations", testDjangoMigrationsCount)
	t.Run("DjangoSessions", testDjangoSessionsCount)
	t.Run("FanclashCaches", testFanclashCachesCount)
	t.Run("Followers", testFollowersCount)
	t.Run("Frames", testFramesCount)
	t.Run("GameEvents", testGameEventsCount)
	t.Run("GamePicks", testGamePicksCount)
	t.Run("GamePowerups", testGamePowerupsCount)
	t.Run("GameSeasons", testGameSeasonsCount)
	t.Run("GameWeekDivisions", testGameWeekDivisionsCount)
	t.Run("GameWeeks", testGameWeeksCount)
	t.Run("Games", testGamesCount)
	t.Run("Items", testItemsCount)
	t.Run("LeaderboardTypes", testLeaderboardTypesCount)
	t.Run("Leaderboards", testLeaderboardsCount)
	t.Run("ManualSubscriptions", testManualSubscriptionsCount)
	t.Run("MatchDays", testMatchDaysCount)
	t.Run("MatchEventProcessors", testMatchEventProcessorsCount)
	t.Run("MatchEventSimulations", testMatchEventSimulationsCount)
	t.Run("MatchEvents", testMatchEventsCount)
	t.Run("MatchHeadlines", testMatchHeadlinesCount)
	t.Run("MatchLeaderboards", testMatchLeaderboardsCount)
	t.Run("MatchNotifications", testMatchNotificationsCount)
	t.Run("MatchPlayers", testMatchPlayersCount)
	t.Run("MatchRewards", testMatchRewardsCount)
	t.Run("Matches", testMatchesCount)
	t.Run("NFTBuckets", testNFTBucketsCount)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsCount)
	t.Run("OptaFeedItems", testOptaFeedItemsCount)
	t.Run("OptaFeeds", testOptaFeedsCount)
	t.Run("Orders", testOrdersCount)
	t.Run("PlayerBuckets", testPlayerBucketsCount)
	t.Run("Players", testPlayersCount)
	t.Run("PowerupActions", testPowerupActionsCount)
	t.Run("Powerups", testPowerupsCount)
	t.Run("PushNotifications", testPushNotificationsCount)
	t.Run("Regions", testRegionsCount)
	t.Run("Rewards", testRewardsCount)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersCount)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersCount)
	t.Run("Seasons", testSeasonsCount)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersCount)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersCount)
	t.Run("Sports", testSportsCount)
	t.Run("StoreProductTransactions", testStoreProductTransactionsCount)
	t.Run("StoreProducts", testStoreProductsCount)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesCount)
	t.Run("SubscriptionRequests", testSubscriptionRequestsCount)
	t.Run("Subscriptions", testSubscriptionsCount)
	t.Run("Teams", testTeamsCount)
	t.Run("Transactions", testTransactionsCount)
	t.Run("UserBadges", testUserBadgesCount)
	t.Run("UserBanners", testUserBannersCount)
	t.Run("UserDivisions", testUserDivisionsCount)
	t.Run("UserFrames", testUserFramesCount)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesCount)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsCount)
	t.Run("Users", testUsersCount)
}

func TestInsert(t *testing.T) {
	t.Run("Actions", testActionsInsert)
	t.Run("Actions", testActionsInsertWhitelist)
	t.Run("AmqpEvents", testAmqpEventsInsert)
	t.Run("AmqpEvents", testAmqpEventsInsertWhitelist)
	t.Run("AppInboxes", testAppInboxesInsert)
	t.Run("AppInboxes", testAppInboxesInsertWhitelist)
	t.Run("AssignedCardPacks", testAssignedCardPacksInsert)
	t.Run("AssignedCardPacks", testAssignedCardPacksInsertWhitelist)
	t.Run("AssignedPlayers", testAssignedPlayersInsert)
	t.Run("AssignedPlayers", testAssignedPlayersInsertWhitelist)
	t.Run("AuthGroups", testAuthGroupsInsert)
	t.Run("AuthGroups", testAuthGroupsInsertWhitelist)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsInsert)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsInsertWhitelist)
	t.Run("AuthPermissions", testAuthPermissionsInsert)
	t.Run("AuthPermissions", testAuthPermissionsInsertWhitelist)
	t.Run("AuthUsers", testAuthUsersInsert)
	t.Run("AuthUsers", testAuthUsersInsertWhitelist)
	t.Run("AuthUserGroups", testAuthUserGroupsInsert)
	t.Run("AuthUserGroups", testAuthUserGroupsInsertWhitelist)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsInsert)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsInsertWhitelist)
	t.Run("Badges", testBadgesInsert)
	t.Run("Badges", testBadgesInsertWhitelist)
	t.Run("BanPenalties", testBanPenaltiesInsert)
	t.Run("BanPenalties", testBanPenaltiesInsertWhitelist)
	t.Run("Banners", testBannersInsert)
	t.Run("Banners", testBannersInsertWhitelist)
	t.Run("CardPackTypes", testCardPackTypesInsert)
	t.Run("CardPackTypes", testCardPackTypesInsertWhitelist)
	t.Run("ChatMessages", testChatMessagesInsert)
	t.Run("ChatMessages", testChatMessagesInsertWhitelist)
	t.Run("ChatRoomMembers", testChatRoomMembersInsert)
	t.Run("ChatRoomMembers", testChatRoomMembersInsertWhitelist)
	t.Run("ChatRooms", testChatRoomsInsert)
	t.Run("ChatRooms", testChatRoomsInsertWhitelist)
	t.Run("CompetitionConfigs", testCompetitionConfigsInsert)
	t.Run("CompetitionConfigs", testCompetitionConfigsInsertWhitelist)
	t.Run("CompetitionEditions", testCompetitionEditionsInsert)
	t.Run("CompetitionEditions", testCompetitionEditionsInsertWhitelist)
	t.Run("CompetitionPhases", testCompetitionPhasesInsert)
	t.Run("CompetitionPhases", testCompetitionPhasesInsertWhitelist)
	t.Run("Competitions", testCompetitionsInsert)
	t.Run("Competitions", testCompetitionsInsertWhitelist)
	t.Run("Countries", testCountriesInsert)
	t.Run("Countries", testCountriesInsertWhitelist)
	t.Run("DivisionRewards", testDivisionRewardsInsert)
	t.Run("DivisionRewards", testDivisionRewardsInsertWhitelist)
	t.Run("Divisions", testDivisionsInsert)
	t.Run("Divisions", testDivisionsInsertWhitelist)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsInsert)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsInsertWhitelist)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesInsert)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesInsertWhitelist)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesInsert)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesInsertWhitelist)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesInsert)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesInsertWhitelist)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksInsert)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksInsertWhitelist)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksInsert)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksInsertWhitelist)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesInsert)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesInsertWhitelist)
	t.Run("DjangoContentTypes", testDjangoContentTypesInsert)
	t.Run("DjangoContentTypes", testDjangoContentTypesInsertWhitelist)
	t.Run("DjangoMigrations", testDjangoMigrationsInsert)
	t.Run("DjangoMigrations", testDjangoMigrationsInsertWhitelist)
	t.Run("DjangoSessions", testDjangoSessionsInsert)
	t.Run("DjangoSessions", testDjangoSessionsInsertWhitelist)
	t.Run("FanclashCaches", testFanclashCachesInsert)
	t.Run("FanclashCaches", testFanclashCachesInsertWhitelist)
	t.Run("Followers", testFollowersInsert)
	t.Run("Followers", testFollowersInsertWhitelist)
	t.Run("Frames", testFramesInsert)
	t.Run("Frames", testFramesInsertWhitelist)
	t.Run("GameEvents", testGameEventsInsert)
	t.Run("GameEvents", testGameEventsInsertWhitelist)
	t.Run("GamePicks", testGamePicksInsert)
	t.Run("GamePicks", testGamePicksInsertWhitelist)
	t.Run("GamePowerups", testGamePowerupsInsert)
	t.Run("GamePowerups", testGamePowerupsInsertWhitelist)
	t.Run("GameSeasons", testGameSeasonsInsert)
	t.Run("GameSeasons", testGameSeasonsInsertWhitelist)
	t.Run("GameWeekDivisions", testGameWeekDivisionsInsert)
	t.Run("GameWeekDivisions", testGameWeekDivisionsInsertWhitelist)
	t.Run("GameWeeks", testGameWeeksInsert)
	t.Run("GameWeeks", testGameWeeksInsertWhitelist)
	t.Run("Games", testGamesInsert)
	t.Run("Games", testGamesInsertWhitelist)
	t.Run("Items", testItemsInsert)
	t.Run("Items", testItemsInsertWhitelist)
	t.Run("LeaderboardTypes", testLeaderboardTypesInsert)
	t.Run("LeaderboardTypes", testLeaderboardTypesInsertWhitelist)
	t.Run("Leaderboards", testLeaderboardsInsert)
	t.Run("Leaderboards", testLeaderboardsInsertWhitelist)
	t.Run("ManualSubscriptions", testManualSubscriptionsInsert)
	t.Run("ManualSubscriptions", testManualSubscriptionsInsertWhitelist)
	t.Run("MatchDays", testMatchDaysInsert)
	t.Run("MatchDays", testMatchDaysInsertWhitelist)
	t.Run("MatchEventProcessors", testMatchEventProcessorsInsert)
	t.Run("MatchEventProcessors", testMatchEventProcessorsInsertWhitelist)
	t.Run("MatchEventSimulations", testMatchEventSimulationsInsert)
	t.Run("MatchEventSimulations", testMatchEventSimulationsInsertWhitelist)
	t.Run("MatchEvents", testMatchEventsInsert)
	t.Run("MatchEvents", testMatchEventsInsertWhitelist)
	t.Run("MatchHeadlines", testMatchHeadlinesInsert)
	t.Run("MatchHeadlines", testMatchHeadlinesInsertWhitelist)
	t.Run("MatchLeaderboards", testMatchLeaderboardsInsert)
	t.Run("MatchLeaderboards", testMatchLeaderboardsInsertWhitelist)
	t.Run("MatchNotifications", testMatchNotificationsInsert)
	t.Run("MatchNotifications", testMatchNotificationsInsertWhitelist)
	t.Run("MatchPlayers", testMatchPlayersInsert)
	t.Run("MatchPlayers", testMatchPlayersInsertWhitelist)
	t.Run("MatchRewards", testMatchRewardsInsert)
	t.Run("MatchRewards", testMatchRewardsInsertWhitelist)
	t.Run("Matches", testMatchesInsert)
	t.Run("Matches", testMatchesInsertWhitelist)
	t.Run("NFTBuckets", testNFTBucketsInsert)
	t.Run("NFTBuckets", testNFTBucketsInsertWhitelist)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsInsert)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsInsertWhitelist)
	t.Run("OptaFeedItems", testOptaFeedItemsInsert)
	t.Run("OptaFeedItems", testOptaFeedItemsInsertWhitelist)
	t.Run("OptaFeeds", testOptaFeedsInsert)
	t.Run("OptaFeeds", testOptaFeedsInsertWhitelist)
	t.Run("Orders", testOrdersInsert)
	t.Run("Orders", testOrdersInsertWhitelist)
	t.Run("PlayerBuckets", testPlayerBucketsInsert)
	t.Run("PlayerBuckets", testPlayerBucketsInsertWhitelist)
	t.Run("Players", testPlayersInsert)
	t.Run("Players", testPlayersInsertWhitelist)
	t.Run("PowerupActions", testPowerupActionsInsert)
	t.Run("PowerupActions", testPowerupActionsInsertWhitelist)
	t.Run("Powerups", testPowerupsInsert)
	t.Run("Powerups", testPowerupsInsertWhitelist)
	t.Run("PushNotifications", testPushNotificationsInsert)
	t.Run("PushNotifications", testPushNotificationsInsertWhitelist)
	t.Run("Regions", testRegionsInsert)
	t.Run("Regions", testRegionsInsertWhitelist)
	t.Run("Rewards", testRewardsInsert)
	t.Run("Rewards", testRewardsInsertWhitelist)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersInsert)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersInsertWhitelist)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersInsert)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersInsertWhitelist)
	t.Run("Seasons", testSeasonsInsert)
	t.Run("Seasons", testSeasonsInsertWhitelist)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersInsert)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersInsertWhitelist)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersInsert)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersInsertWhitelist)
	t.Run("Sports", testSportsInsert)
	t.Run("Sports", testSportsInsertWhitelist)
	t.Run("StoreProductTransactions", testStoreProductTransactionsInsert)
	t.Run("StoreProductTransactions", testStoreProductTransactionsInsertWhitelist)
	t.Run("StoreProducts", testStoreProductsInsert)
	t.Run("StoreProducts", testStoreProductsInsertWhitelist)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesInsert)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesInsertWhitelist)
	t.Run("SubscriptionRequests", testSubscriptionRequestsInsert)
	t.Run("SubscriptionRequests", testSubscriptionRequestsInsertWhitelist)
	t.Run("Subscriptions", testSubscriptionsInsert)
	t.Run("Subscriptions", testSubscriptionsInsertWhitelist)
	t.Run("Teams", testTeamsInsert)
	t.Run("Teams", testTeamsInsertWhitelist)
	t.Run("Transactions", testTransactionsInsert)
	t.Run("Transactions", testTransactionsInsertWhitelist)
	t.Run("UserBadges", testUserBadgesInsert)
	t.Run("UserBadges", testUserBadgesInsertWhitelist)
	t.Run("UserBanners", testUserBannersInsert)
	t.Run("UserBanners", testUserBannersInsertWhitelist)
	t.Run("UserDivisions", testUserDivisionsInsert)
	t.Run("UserDivisions", testUserDivisionsInsertWhitelist)
	t.Run("UserFrames", testUserFramesInsert)
	t.Run("UserFrames", testUserFramesInsertWhitelist)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesInsert)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesInsertWhitelist)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsInsert)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsInsertWhitelist)
	t.Run("Users", testUsersInsert)
	t.Run("Users", testUsersInsertWhitelist)
}

func TestReload(t *testing.T) {
	t.Run("Actions", testActionsReload)
	t.Run("AmqpEvents", testAmqpEventsReload)
	t.Run("AppInboxes", testAppInboxesReload)
	t.Run("AssignedCardPacks", testAssignedCardPacksReload)
	t.Run("AssignedPlayers", testAssignedPlayersReload)
	t.Run("AuthGroups", testAuthGroupsReload)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsReload)
	t.Run("AuthPermissions", testAuthPermissionsReload)
	t.Run("AuthUsers", testAuthUsersReload)
	t.Run("AuthUserGroups", testAuthUserGroupsReload)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsReload)
	t.Run("Badges", testBadgesReload)
	t.Run("BanPenalties", testBanPenaltiesReload)
	t.Run("Banners", testBannersReload)
	t.Run("CardPackTypes", testCardPackTypesReload)
	t.Run("ChatMessages", testChatMessagesReload)
	t.Run("ChatRoomMembers", testChatRoomMembersReload)
	t.Run("ChatRooms", testChatRoomsReload)
	t.Run("CompetitionConfigs", testCompetitionConfigsReload)
	t.Run("CompetitionEditions", testCompetitionEditionsReload)
	t.Run("CompetitionPhases", testCompetitionPhasesReload)
	t.Run("Competitions", testCompetitionsReload)
	t.Run("Countries", testCountriesReload)
	t.Run("DivisionRewards", testDivisionRewardsReload)
	t.Run("Divisions", testDivisionsReload)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsReload)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesReload)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesReload)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesReload)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksReload)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksReload)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesReload)
	t.Run("DjangoContentTypes", testDjangoContentTypesReload)
	t.Run("DjangoMigrations", testDjangoMigrationsReload)
	t.Run("DjangoSessions", testDjangoSessionsReload)
	t.Run("FanclashCaches", testFanclashCachesReload)
	t.Run("Followers", testFollowersReload)
	t.Run("Frames", testFramesReload)
	t.Run("GameEvents", testGameEventsReload)
	t.Run("GamePicks", testGamePicksReload)
	t.Run("GamePowerups", testGamePowerupsReload)
	t.Run("GameSeasons", testGameSeasonsReload)
	t.Run("GameWeekDivisions", testGameWeekDivisionsReload)
	t.Run("GameWeeks", testGameWeeksReload)
	t.Run("Games", testGamesReload)
	t.Run("Items", testItemsReload)
	t.Run("LeaderboardTypes", testLeaderboardTypesReload)
	t.Run("Leaderboards", testLeaderboardsReload)
	t.Run("ManualSubscriptions", testManualSubscriptionsReload)
	t.Run("MatchDays", testMatchDaysReload)
	t.Run("MatchEventProcessors", testMatchEventProcessorsReload)
	t.Run("MatchEventSimulations", testMatchEventSimulationsReload)
	t.Run("MatchEvents", testMatchEventsReload)
	t.Run("MatchHeadlines", testMatchHeadlinesReload)
	t.Run("MatchLeaderboards", testMatchLeaderboardsReload)
	t.Run("MatchNotifications", testMatchNotificationsReload)
	t.Run("MatchPlayers", testMatchPlayersReload)
	t.Run("MatchRewards", testMatchRewardsReload)
	t.Run("Matches", testMatchesReload)
	t.Run("NFTBuckets", testNFTBucketsReload)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsReload)
	t.Run("OptaFeedItems", testOptaFeedItemsReload)
	t.Run("OptaFeeds", testOptaFeedsReload)
	t.Run("Orders", testOrdersReload)
	t.Run("PlayerBuckets", testPlayerBucketsReload)
	t.Run("Players", testPlayersReload)
	t.Run("PowerupActions", testPowerupActionsReload)
	t.Run("Powerups", testPowerupsReload)
	t.Run("PushNotifications", testPushNotificationsReload)
	t.Run("Regions", testRegionsReload)
	t.Run("Rewards", testRewardsReload)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersReload)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersReload)
	t.Run("Seasons", testSeasonsReload)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersReload)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersReload)
	t.Run("Sports", testSportsReload)
	t.Run("StoreProductTransactions", testStoreProductTransactionsReload)
	t.Run("StoreProducts", testStoreProductsReload)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesReload)
	t.Run("SubscriptionRequests", testSubscriptionRequestsReload)
	t.Run("Subscriptions", testSubscriptionsReload)
	t.Run("Teams", testTeamsReload)
	t.Run("Transactions", testTransactionsReload)
	t.Run("UserBadges", testUserBadgesReload)
	t.Run("UserBanners", testUserBannersReload)
	t.Run("UserDivisions", testUserDivisionsReload)
	t.Run("UserFrames", testUserFramesReload)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesReload)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsReload)
	t.Run("Users", testUsersReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("Actions", testActionsReloadAll)
	t.Run("AmqpEvents", testAmqpEventsReloadAll)
	t.Run("AppInboxes", testAppInboxesReloadAll)
	t.Run("AssignedCardPacks", testAssignedCardPacksReloadAll)
	t.Run("AssignedPlayers", testAssignedPlayersReloadAll)
	t.Run("AuthGroups", testAuthGroupsReloadAll)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsReloadAll)
	t.Run("AuthPermissions", testAuthPermissionsReloadAll)
	t.Run("AuthUsers", testAuthUsersReloadAll)
	t.Run("AuthUserGroups", testAuthUserGroupsReloadAll)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsReloadAll)
	t.Run("Badges", testBadgesReloadAll)
	t.Run("BanPenalties", testBanPenaltiesReloadAll)
	t.Run("Banners", testBannersReloadAll)
	t.Run("CardPackTypes", testCardPackTypesReloadAll)
	t.Run("ChatMessages", testChatMessagesReloadAll)
	t.Run("ChatRoomMembers", testChatRoomMembersReloadAll)
	t.Run("ChatRooms", testChatRoomsReloadAll)
	t.Run("CompetitionConfigs", testCompetitionConfigsReloadAll)
	t.Run("CompetitionEditions", testCompetitionEditionsReloadAll)
	t.Run("CompetitionPhases", testCompetitionPhasesReloadAll)
	t.Run("Competitions", testCompetitionsReloadAll)
	t.Run("Countries", testCountriesReloadAll)
	t.Run("DivisionRewards", testDivisionRewardsReloadAll)
	t.Run("Divisions", testDivisionsReloadAll)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsReloadAll)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesReloadAll)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesReloadAll)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesReloadAll)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksReloadAll)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksReloadAll)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesReloadAll)
	t.Run("DjangoContentTypes", testDjangoContentTypesReloadAll)
	t.Run("DjangoMigrations", testDjangoMigrationsReloadAll)
	t.Run("DjangoSessions", testDjangoSessionsReloadAll)
	t.Run("FanclashCaches", testFanclashCachesReloadAll)
	t.Run("Followers", testFollowersReloadAll)
	t.Run("Frames", testFramesReloadAll)
	t.Run("GameEvents", testGameEventsReloadAll)
	t.Run("GamePicks", testGamePicksReloadAll)
	t.Run("GamePowerups", testGamePowerupsReloadAll)
	t.Run("GameSeasons", testGameSeasonsReloadAll)
	t.Run("GameWeekDivisions", testGameWeekDivisionsReloadAll)
	t.Run("GameWeeks", testGameWeeksReloadAll)
	t.Run("Games", testGamesReloadAll)
	t.Run("Items", testItemsReloadAll)
	t.Run("LeaderboardTypes", testLeaderboardTypesReloadAll)
	t.Run("Leaderboards", testLeaderboardsReloadAll)
	t.Run("ManualSubscriptions", testManualSubscriptionsReloadAll)
	t.Run("MatchDays", testMatchDaysReloadAll)
	t.Run("MatchEventProcessors", testMatchEventProcessorsReloadAll)
	t.Run("MatchEventSimulations", testMatchEventSimulationsReloadAll)
	t.Run("MatchEvents", testMatchEventsReloadAll)
	t.Run("MatchHeadlines", testMatchHeadlinesReloadAll)
	t.Run("MatchLeaderboards", testMatchLeaderboardsReloadAll)
	t.Run("MatchNotifications", testMatchNotificationsReloadAll)
	t.Run("MatchPlayers", testMatchPlayersReloadAll)
	t.Run("MatchRewards", testMatchRewardsReloadAll)
	t.Run("Matches", testMatchesReloadAll)
	t.Run("NFTBuckets", testNFTBucketsReloadAll)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsReloadAll)
	t.Run("OptaFeedItems", testOptaFeedItemsReloadAll)
	t.Run("OptaFeeds", testOptaFeedsReloadAll)
	t.Run("Orders", testOrdersReloadAll)
	t.Run("PlayerBuckets", testPlayerBucketsReloadAll)
	t.Run("Players", testPlayersReloadAll)
	t.Run("PowerupActions", testPowerupActionsReloadAll)
	t.Run("Powerups", testPowerupsReloadAll)
	t.Run("PushNotifications", testPushNotificationsReloadAll)
	t.Run("Regions", testRegionsReloadAll)
	t.Run("Rewards", testRewardsReloadAll)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersReloadAll)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersReloadAll)
	t.Run("Seasons", testSeasonsReloadAll)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersReloadAll)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersReloadAll)
	t.Run("Sports", testSportsReloadAll)
	t.Run("StoreProductTransactions", testStoreProductTransactionsReloadAll)
	t.Run("StoreProducts", testStoreProductsReloadAll)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesReloadAll)
	t.Run("SubscriptionRequests", testSubscriptionRequestsReloadAll)
	t.Run("Subscriptions", testSubscriptionsReloadAll)
	t.Run("Teams", testTeamsReloadAll)
	t.Run("Transactions", testTransactionsReloadAll)
	t.Run("UserBadges", testUserBadgesReloadAll)
	t.Run("UserBanners", testUserBannersReloadAll)
	t.Run("UserDivisions", testUserDivisionsReloadAll)
	t.Run("UserFrames", testUserFramesReloadAll)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesReloadAll)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsReloadAll)
	t.Run("Users", testUsersReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("Actions", testActionsSelect)
	t.Run("AmqpEvents", testAmqpEventsSelect)
	t.Run("AppInboxes", testAppInboxesSelect)
	t.Run("AssignedCardPacks", testAssignedCardPacksSelect)
	t.Run("AssignedPlayers", testAssignedPlayersSelect)
	t.Run("AuthGroups", testAuthGroupsSelect)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsSelect)
	t.Run("AuthPermissions", testAuthPermissionsSelect)
	t.Run("AuthUsers", testAuthUsersSelect)
	t.Run("AuthUserGroups", testAuthUserGroupsSelect)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsSelect)
	t.Run("Badges", testBadgesSelect)
	t.Run("BanPenalties", testBanPenaltiesSelect)
	t.Run("Banners", testBannersSelect)
	t.Run("CardPackTypes", testCardPackTypesSelect)
	t.Run("ChatMessages", testChatMessagesSelect)
	t.Run("ChatRoomMembers", testChatRoomMembersSelect)
	t.Run("ChatRooms", testChatRoomsSelect)
	t.Run("CompetitionConfigs", testCompetitionConfigsSelect)
	t.Run("CompetitionEditions", testCompetitionEditionsSelect)
	t.Run("CompetitionPhases", testCompetitionPhasesSelect)
	t.Run("Competitions", testCompetitionsSelect)
	t.Run("Countries", testCountriesSelect)
	t.Run("DivisionRewards", testDivisionRewardsSelect)
	t.Run("Divisions", testDivisionsSelect)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsSelect)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesSelect)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesSelect)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesSelect)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksSelect)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksSelect)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesSelect)
	t.Run("DjangoContentTypes", testDjangoContentTypesSelect)
	t.Run("DjangoMigrations", testDjangoMigrationsSelect)
	t.Run("DjangoSessions", testDjangoSessionsSelect)
	t.Run("FanclashCaches", testFanclashCachesSelect)
	t.Run("Followers", testFollowersSelect)
	t.Run("Frames", testFramesSelect)
	t.Run("GameEvents", testGameEventsSelect)
	t.Run("GamePicks", testGamePicksSelect)
	t.Run("GamePowerups", testGamePowerupsSelect)
	t.Run("GameSeasons", testGameSeasonsSelect)
	t.Run("GameWeekDivisions", testGameWeekDivisionsSelect)
	t.Run("GameWeeks", testGameWeeksSelect)
	t.Run("Games", testGamesSelect)
	t.Run("Items", testItemsSelect)
	t.Run("LeaderboardTypes", testLeaderboardTypesSelect)
	t.Run("Leaderboards", testLeaderboardsSelect)
	t.Run("ManualSubscriptions", testManualSubscriptionsSelect)
	t.Run("MatchDays", testMatchDaysSelect)
	t.Run("MatchEventProcessors", testMatchEventProcessorsSelect)
	t.Run("MatchEventSimulations", testMatchEventSimulationsSelect)
	t.Run("MatchEvents", testMatchEventsSelect)
	t.Run("MatchHeadlines", testMatchHeadlinesSelect)
	t.Run("MatchLeaderboards", testMatchLeaderboardsSelect)
	t.Run("MatchNotifications", testMatchNotificationsSelect)
	t.Run("MatchPlayers", testMatchPlayersSelect)
	t.Run("MatchRewards", testMatchRewardsSelect)
	t.Run("Matches", testMatchesSelect)
	t.Run("NFTBuckets", testNFTBucketsSelect)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsSelect)
	t.Run("OptaFeedItems", testOptaFeedItemsSelect)
	t.Run("OptaFeeds", testOptaFeedsSelect)
	t.Run("Orders", testOrdersSelect)
	t.Run("PlayerBuckets", testPlayerBucketsSelect)
	t.Run("Players", testPlayersSelect)
	t.Run("PowerupActions", testPowerupActionsSelect)
	t.Run("Powerups", testPowerupsSelect)
	t.Run("PushNotifications", testPushNotificationsSelect)
	t.Run("Regions", testRegionsSelect)
	t.Run("Rewards", testRewardsSelect)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersSelect)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersSelect)
	t.Run("Seasons", testSeasonsSelect)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersSelect)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersSelect)
	t.Run("Sports", testSportsSelect)
	t.Run("StoreProductTransactions", testStoreProductTransactionsSelect)
	t.Run("StoreProducts", testStoreProductsSelect)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesSelect)
	t.Run("SubscriptionRequests", testSubscriptionRequestsSelect)
	t.Run("Subscriptions", testSubscriptionsSelect)
	t.Run("Teams", testTeamsSelect)
	t.Run("Transactions", testTransactionsSelect)
	t.Run("UserBadges", testUserBadgesSelect)
	t.Run("UserBanners", testUserBannersSelect)
	t.Run("UserDivisions", testUserDivisionsSelect)
	t.Run("UserFrames", testUserFramesSelect)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesSelect)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsSelect)
	t.Run("Users", testUsersSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("Actions", testActionsUpdate)
	t.Run("AmqpEvents", testAmqpEventsUpdate)
	t.Run("AppInboxes", testAppInboxesUpdate)
	t.Run("AssignedCardPacks", testAssignedCardPacksUpdate)
	t.Run("AssignedPlayers", testAssignedPlayersUpdate)
	t.Run("AuthGroups", testAuthGroupsUpdate)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsUpdate)
	t.Run("AuthPermissions", testAuthPermissionsUpdate)
	t.Run("AuthUsers", testAuthUsersUpdate)
	t.Run("AuthUserGroups", testAuthUserGroupsUpdate)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsUpdate)
	t.Run("Badges", testBadgesUpdate)
	t.Run("BanPenalties", testBanPenaltiesUpdate)
	t.Run("Banners", testBannersUpdate)
	t.Run("CardPackTypes", testCardPackTypesUpdate)
	t.Run("ChatMessages", testChatMessagesUpdate)
	t.Run("ChatRoomMembers", testChatRoomMembersUpdate)
	t.Run("ChatRooms", testChatRoomsUpdate)
	t.Run("CompetitionConfigs", testCompetitionConfigsUpdate)
	t.Run("CompetitionEditions", testCompetitionEditionsUpdate)
	t.Run("CompetitionPhases", testCompetitionPhasesUpdate)
	t.Run("Competitions", testCompetitionsUpdate)
	t.Run("Countries", testCountriesUpdate)
	t.Run("DivisionRewards", testDivisionRewardsUpdate)
	t.Run("Divisions", testDivisionsUpdate)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsUpdate)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesUpdate)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesUpdate)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesUpdate)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksUpdate)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksUpdate)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesUpdate)
	t.Run("DjangoContentTypes", testDjangoContentTypesUpdate)
	t.Run("DjangoMigrations", testDjangoMigrationsUpdate)
	t.Run("DjangoSessions", testDjangoSessionsUpdate)
	t.Run("FanclashCaches", testFanclashCachesUpdate)
	t.Run("Followers", testFollowersUpdate)
	t.Run("Frames", testFramesUpdate)
	t.Run("GameEvents", testGameEventsUpdate)
	t.Run("GamePicks", testGamePicksUpdate)
	t.Run("GamePowerups", testGamePowerupsUpdate)
	t.Run("GameSeasons", testGameSeasonsUpdate)
	t.Run("GameWeekDivisions", testGameWeekDivisionsUpdate)
	t.Run("GameWeeks", testGameWeeksUpdate)
	t.Run("Games", testGamesUpdate)
	t.Run("Items", testItemsUpdate)
	t.Run("LeaderboardTypes", testLeaderboardTypesUpdate)
	t.Run("Leaderboards", testLeaderboardsUpdate)
	t.Run("ManualSubscriptions", testManualSubscriptionsUpdate)
	t.Run("MatchDays", testMatchDaysUpdate)
	t.Run("MatchEventProcessors", testMatchEventProcessorsUpdate)
	t.Run("MatchEventSimulations", testMatchEventSimulationsUpdate)
	t.Run("MatchEvents", testMatchEventsUpdate)
	t.Run("MatchHeadlines", testMatchHeadlinesUpdate)
	t.Run("MatchLeaderboards", testMatchLeaderboardsUpdate)
	t.Run("MatchNotifications", testMatchNotificationsUpdate)
	t.Run("MatchPlayers", testMatchPlayersUpdate)
	t.Run("MatchRewards", testMatchRewardsUpdate)
	t.Run("Matches", testMatchesUpdate)
	t.Run("NFTBuckets", testNFTBucketsUpdate)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsUpdate)
	t.Run("OptaFeedItems", testOptaFeedItemsUpdate)
	t.Run("OptaFeeds", testOptaFeedsUpdate)
	t.Run("Orders", testOrdersUpdate)
	t.Run("PlayerBuckets", testPlayerBucketsUpdate)
	t.Run("Players", testPlayersUpdate)
	t.Run("PowerupActions", testPowerupActionsUpdate)
	t.Run("Powerups", testPowerupsUpdate)
	t.Run("PushNotifications", testPushNotificationsUpdate)
	t.Run("Regions", testRegionsUpdate)
	t.Run("Rewards", testRewardsUpdate)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersUpdate)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersUpdate)
	t.Run("Seasons", testSeasonsUpdate)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersUpdate)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersUpdate)
	t.Run("Sports", testSportsUpdate)
	t.Run("StoreProductTransactions", testStoreProductTransactionsUpdate)
	t.Run("StoreProducts", testStoreProductsUpdate)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesUpdate)
	t.Run("SubscriptionRequests", testSubscriptionRequestsUpdate)
	t.Run("Subscriptions", testSubscriptionsUpdate)
	t.Run("Teams", testTeamsUpdate)
	t.Run("Transactions", testTransactionsUpdate)
	t.Run("UserBadges", testUserBadgesUpdate)
	t.Run("UserBanners", testUserBannersUpdate)
	t.Run("UserDivisions", testUserDivisionsUpdate)
	t.Run("UserFrames", testUserFramesUpdate)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesUpdate)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsUpdate)
	t.Run("Users", testUsersUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("Actions", testActionsSliceUpdateAll)
	t.Run("AmqpEvents", testAmqpEventsSliceUpdateAll)
	t.Run("AppInboxes", testAppInboxesSliceUpdateAll)
	t.Run("AssignedCardPacks", testAssignedCardPacksSliceUpdateAll)
	t.Run("AssignedPlayers", testAssignedPlayersSliceUpdateAll)
	t.Run("AuthGroups", testAuthGroupsSliceUpdateAll)
	t.Run("AuthGroupPermissions", testAuthGroupPermissionsSliceUpdateAll)
	t.Run("AuthPermissions", testAuthPermissionsSliceUpdateAll)
	t.Run("AuthUsers", testAuthUsersSliceUpdateAll)
	t.Run("AuthUserGroups", testAuthUserGroupsSliceUpdateAll)
	t.Run("AuthUserUserPermissions", testAuthUserUserPermissionsSliceUpdateAll)
	t.Run("Badges", testBadgesSliceUpdateAll)
	t.Run("BanPenalties", testBanPenaltiesSliceUpdateAll)
	t.Run("Banners", testBannersSliceUpdateAll)
	t.Run("CardPackTypes", testCardPackTypesSliceUpdateAll)
	t.Run("ChatMessages", testChatMessagesSliceUpdateAll)
	t.Run("ChatRoomMembers", testChatRoomMembersSliceUpdateAll)
	t.Run("ChatRooms", testChatRoomsSliceUpdateAll)
	t.Run("CompetitionConfigs", testCompetitionConfigsSliceUpdateAll)
	t.Run("CompetitionEditions", testCompetitionEditionsSliceUpdateAll)
	t.Run("CompetitionPhases", testCompetitionPhasesSliceUpdateAll)
	t.Run("Competitions", testCompetitionsSliceUpdateAll)
	t.Run("Countries", testCountriesSliceUpdateAll)
	t.Run("DivisionRewards", testDivisionRewardsSliceUpdateAll)
	t.Run("Divisions", testDivisionsSliceUpdateAll)
	t.Run("DjangoAdminLogs", testDjangoAdminLogsSliceUpdateAll)
	t.Run("DjangoCeleryBeatClockedschedules", testDjangoCeleryBeatClockedschedulesSliceUpdateAll)
	t.Run("DjangoCeleryBeatCrontabschedules", testDjangoCeleryBeatCrontabschedulesSliceUpdateAll)
	t.Run("DjangoCeleryBeatIntervalschedules", testDjangoCeleryBeatIntervalschedulesSliceUpdateAll)
	t.Run("DjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictasksSliceUpdateAll)
	t.Run("DjangoCeleryBeatPeriodicListTasks", testDjangoCeleryBeatPeriodicListTasksSliceUpdateAll)
	t.Run("DjangoCeleryBeatSolarschedules", testDjangoCeleryBeatSolarschedulesSliceUpdateAll)
	t.Run("DjangoContentTypes", testDjangoContentTypesSliceUpdateAll)
	t.Run("DjangoMigrations", testDjangoMigrationsSliceUpdateAll)
	t.Run("DjangoSessions", testDjangoSessionsSliceUpdateAll)
	t.Run("FanclashCaches", testFanclashCachesSliceUpdateAll)
	t.Run("Followers", testFollowersSliceUpdateAll)
	t.Run("Frames", testFramesSliceUpdateAll)
	t.Run("GameEvents", testGameEventsSliceUpdateAll)
	t.Run("GamePicks", testGamePicksSliceUpdateAll)
	t.Run("GamePowerups", testGamePowerupsSliceUpdateAll)
	t.Run("GameSeasons", testGameSeasonsSliceUpdateAll)
	t.Run("GameWeekDivisions", testGameWeekDivisionsSliceUpdateAll)
	t.Run("GameWeeks", testGameWeeksSliceUpdateAll)
	t.Run("Games", testGamesSliceUpdateAll)
	t.Run("Items", testItemsSliceUpdateAll)
	t.Run("LeaderboardTypes", testLeaderboardTypesSliceUpdateAll)
	t.Run("Leaderboards", testLeaderboardsSliceUpdateAll)
	t.Run("ManualSubscriptions", testManualSubscriptionsSliceUpdateAll)
	t.Run("MatchDays", testMatchDaysSliceUpdateAll)
	t.Run("MatchEventProcessors", testMatchEventProcessorsSliceUpdateAll)
	t.Run("MatchEventSimulations", testMatchEventSimulationsSliceUpdateAll)
	t.Run("MatchEvents", testMatchEventsSliceUpdateAll)
	t.Run("MatchHeadlines", testMatchHeadlinesSliceUpdateAll)
	t.Run("MatchLeaderboards", testMatchLeaderboardsSliceUpdateAll)
	t.Run("MatchNotifications", testMatchNotificationsSliceUpdateAll)
	t.Run("MatchPlayers", testMatchPlayersSliceUpdateAll)
	t.Run("MatchRewards", testMatchRewardsSliceUpdateAll)
	t.Run("Matches", testMatchesSliceUpdateAll)
	t.Run("NFTBuckets", testNFTBucketsSliceUpdateAll)
	t.Run("OptaFeedItemVersions", testOptaFeedItemVersionsSliceUpdateAll)
	t.Run("OptaFeedItems", testOptaFeedItemsSliceUpdateAll)
	t.Run("OptaFeeds", testOptaFeedsSliceUpdateAll)
	t.Run("Orders", testOrdersSliceUpdateAll)
	t.Run("PlayerBuckets", testPlayerBucketsSliceUpdateAll)
	t.Run("Players", testPlayersSliceUpdateAll)
	t.Run("PowerupActions", testPowerupActionsSliceUpdateAll)
	t.Run("Powerups", testPowerupsSliceUpdateAll)
	t.Run("PushNotifications", testPushNotificationsSliceUpdateAll)
	t.Run("Regions", testRegionsSliceUpdateAll)
	t.Run("Rewards", testRewardsSliceUpdateAll)
	t.Run("SeasonCompetitionMembers", testSeasonCompetitionMembersSliceUpdateAll)
	t.Run("SeasonTeamPlayers", testSeasonTeamPlayersSliceUpdateAll)
	t.Run("Seasons", testSeasonsSliceUpdateAll)
	t.Run("SelectionTeamPlayers", testSelectionTeamPlayersSliceUpdateAll)
	t.Run("SoccerWikiPlayers", testSoccerWikiPlayersSliceUpdateAll)
	t.Run("Sports", testSportsSliceUpdateAll)
	t.Run("StoreProductTransactions", testStoreProductTransactionsSliceUpdateAll)
	t.Run("StoreProducts", testStoreProductsSliceUpdateAll)
	t.Run("SubscriptionHistories", testSubscriptionHistoriesSliceUpdateAll)
	t.Run("SubscriptionRequests", testSubscriptionRequestsSliceUpdateAll)
	t.Run("Subscriptions", testSubscriptionsSliceUpdateAll)
	t.Run("Teams", testTeamsSliceUpdateAll)
	t.Run("Transactions", testTransactionsSliceUpdateAll)
	t.Run("UserBadges", testUserBadgesSliceUpdateAll)
	t.Run("UserBanners", testUserBannersSliceUpdateAll)
	t.Run("UserDivisions", testUserDivisionsSliceUpdateAll)
	t.Run("UserFrames", testUserFramesSliceUpdateAll)
	t.Run("UserGameWeekHistories", testUserGameWeekHistoriesSliceUpdateAll)
	t.Run("UserLeaderboardSubscriptions", testUserLeaderboardSubscriptionsSliceUpdateAll)
	t.Run("Users", testUsersSliceUpdateAll)
}
