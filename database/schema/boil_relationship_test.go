// Code generated by SQLBoiler 4.16.2 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package schema

import "testing"

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("ActionToSportUsingSport", testActionToOneSportUsingSport)
	t.Run("AppInboxToGameUsingGame", testAppInboxToOneGameUsingGame)
	t.Run("AppInboxToGameWeekUsingGameWeekID", testAppInboxToOneGameWeekUsingGameWeekID)
	t.Run("AppInboxToMatchUsingMatchID", testAppInboxToOneMatchUsingMatchID)
	t.Run("AppInboxToRewardUsingReward", testAppInboxToOneRewardUsingReward)
	t.Run("AppInboxToUserUsingUser", testAppInboxToOneUserUsingUser)
	t.Run("AssignedCardPackToCardPackTypeUsingCardPackType", testAssignedCardPackToOneCardPackTypeUsingCardPackType)
	t.Run("AssignedCardPackToStoreProductTransactionUsingStoreTransaction", testAssignedCardPackToOneStoreProductTransactionUsingStoreTransaction)
	t.Run("AssignedCardPackToUserUsingUser", testAssignedCardPackToOneUserUsingUser)
	t.Run("AssignedPlayerToNFTBucketUsingPlayerNFT", testAssignedPlayerToOneNFTBucketUsingPlayerNFT)
	t.Run("AuthGroupPermissionToAuthPermissionUsingPermission", testAuthGroupPermissionToOneAuthPermissionUsingPermission)
	t.Run("AuthGroupPermissionToAuthGroupUsingGroup", testAuthGroupPermissionToOneAuthGroupUsingGroup)
	t.Run("AuthPermissionToDjangoContentTypeUsingContentType", testAuthPermissionToOneDjangoContentTypeUsingContentType)
	t.Run("AuthUserGroupToAuthGroupUsingGroup", testAuthUserGroupToOneAuthGroupUsingGroup)
	t.Run("AuthUserGroupToAuthUserUsingUser", testAuthUserGroupToOneAuthUserUsingUser)
	t.Run("AuthUserUserPermissionToAuthPermissionUsingPermission", testAuthUserUserPermissionToOneAuthPermissionUsingPermission)
	t.Run("AuthUserUserPermissionToAuthUserUsingUser", testAuthUserUserPermissionToOneAuthUserUsingUser)
	t.Run("BanPenaltyToUserUsingUser", testBanPenaltyToOneUserUsingUser)
	t.Run("ChatMessageToChatRoomUsingRoom", testChatMessageToOneChatRoomUsingRoom)
	t.Run("ChatMessageToUserUsingSender", testChatMessageToOneUserUsingSender)
	t.Run("ChatRoomMemberToChatRoomUsingRoom", testChatRoomMemberToOneChatRoomUsingRoom)
	t.Run("ChatRoomMemberToUserUsingUser", testChatRoomMemberToOneUserUsingUser)
	t.Run("ChatRoomToMatchUsingMatch", testChatRoomToOneMatchUsingMatch)
	t.Run("CompetitionConfigToCompetitionUsingRelatedCompetition", testCompetitionConfigToOneCompetitionUsingRelatedCompetition)
	t.Run("CompetitionConfigToSportUsingSport", testCompetitionConfigToOneSportUsingSport)
	t.Run("CompetitionEditionToCompetitionUsingCompetition", testCompetitionEditionToOneCompetitionUsingCompetition)
	t.Run("CompetitionPhaseToCompetitionEditionUsingCompetitionEdition", testCompetitionPhaseToOneCompetitionEditionUsingCompetitionEdition)
	t.Run("CompetitionToCompetitionConfigUsingConfig", testCompetitionToOneCompetitionConfigUsingConfig)
	t.Run("CompetitionToSportUsingSport", testCompetitionToOneSportUsingSport)
	t.Run("DivisionRewardToDivisionUsingDivision", testDivisionRewardToOneDivisionUsingDivision)
	t.Run("DivisionRewardToRewardUsingReward", testDivisionRewardToOneRewardUsingReward)
	t.Run("DivisionRewardToGameWeekUsingWeek", testDivisionRewardToOneGameWeekUsingWeek)
	t.Run("DjangoAdminLogToDjangoContentTypeUsingContentType", testDjangoAdminLogToOneDjangoContentTypeUsingContentType)
	t.Run("DjangoAdminLogToAuthUserUsingUser", testDjangoAdminLogToOneAuthUserUsingUser)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatClockedscheduleUsingClocked", testDjangoCeleryBeatPeriodictaskToOneDjangoCeleryBeatClockedscheduleUsingClocked)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatCrontabscheduleUsingCrontab", testDjangoCeleryBeatPeriodictaskToOneDjangoCeleryBeatCrontabscheduleUsingCrontab)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatIntervalscheduleUsingInterval", testDjangoCeleryBeatPeriodictaskToOneDjangoCeleryBeatIntervalscheduleUsingInterval)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatSolarscheduleUsingSolar", testDjangoCeleryBeatPeriodictaskToOneDjangoCeleryBeatSolarscheduleUsingSolar)
	t.Run("FollowerToUserUsingFromUser", testFollowerToOneUserUsingFromUser)
	t.Run("FollowerToUserUsingToUser", testFollowerToOneUserUsingToUser)
	t.Run("GameEventToGameUsingGame", testGameEventToOneGameUsingGame)
	t.Run("GameEventToGamePickUsingGamePick", testGameEventToOneGamePickUsingGamePick)
	t.Run("GameEventToMatchEventUsingMatchEvent", testGameEventToOneMatchEventUsingMatchEvent)
	t.Run("GameEventToPlayerUsingPlayer", testGameEventToOnePlayerUsingPlayer)
	t.Run("GameEventToGamePowerupUsingPowerup", testGameEventToOneGamePowerupUsingPowerup)
	t.Run("GameEventToTeamUsingTeam", testGameEventToOneTeamUsingTeam)
	t.Run("GamePickToAssignedPlayerUsingAssignedPlayer", testGamePickToOneAssignedPlayerUsingAssignedPlayer)
	t.Run("GamePickToGameUsingGame", testGamePickToOneGameUsingGame)
	t.Run("GamePickToPlayerUsingPlayer", testGamePickToOnePlayerUsingPlayer)
	t.Run("GamePowerupToGameUsingGame", testGamePowerupToOneGameUsingGame)
	t.Run("GamePowerupToPowerupUsingPowerup", testGamePowerupToOnePowerupUsingPowerup)
	t.Run("GameWeekDivisionToDivisionUsingDivision", testGameWeekDivisionToOneDivisionUsingDivision)
	t.Run("GameWeekDivisionToGameWeekUsingWeek", testGameWeekDivisionToOneGameWeekUsingWeek)
	t.Run("GameWeekToMatchLeaderboardUsingLeaderboard", testGameWeekToOneMatchLeaderboardUsingLeaderboard)
	t.Run("GameWeekToGameSeasonUsingSeason", testGameWeekToOneGameSeasonUsingSeason)
	t.Run("GameToMatchUsingMatch", testGameToOneMatchUsingMatch)
	t.Run("GameToSportUsingSport", testGameToOneSportUsingSport)
	t.Run("GameToUserUsingUser", testGameToOneUserUsingUser)
	t.Run("LeaderboardToCountryUsingCountry", testLeaderboardToOneCountryUsingCountry)
	t.Run("LeaderboardToSeasonUsingSeason", testLeaderboardToOneSeasonUsingSeason)
	t.Run("LeaderboardToTeamUsingTeam", testLeaderboardToOneTeamUsingTeam)
	t.Run("ManualSubscriptionToUserUsingUser", testManualSubscriptionToOneUserUsingUser)
	t.Run("MatchEventProcessorToMatchUsingMatch", testMatchEventProcessorToOneMatchUsingMatch)
	t.Run("MatchEventSimulationToMatchEventUsingMatchEvent", testMatchEventSimulationToOneMatchEventUsingMatchEvent)
	t.Run("MatchEventSimulationToMatchUsingMatch", testMatchEventSimulationToOneMatchUsingMatch)
	t.Run("MatchEventToMatchUsingMatch", testMatchEventToOneMatchUsingMatch)
	t.Run("MatchEventToOptaFeedItemVersionUsingOptaFeedItemVersion", testMatchEventToOneOptaFeedItemVersionUsingOptaFeedItemVersion)
	t.Run("MatchEventToPlayerUsingPlayer", testMatchEventToOnePlayerUsingPlayer)
	t.Run("MatchEventToTeamUsingTeam", testMatchEventToOneTeamUsingTeam)
	t.Run("MatchHeadlineToMatchUsingMatch", testMatchHeadlineToOneMatchUsingMatch)
	t.Run("MatchLeaderboardToDivisionUsingDivision", testMatchLeaderboardToOneDivisionUsingDivision)
	t.Run("MatchLeaderboardToGameUsingGame", testMatchLeaderboardToOneGameUsingGame)
	t.Run("MatchLeaderboardToLeaderboardTypeUsingLeaderboardType", testMatchLeaderboardToOneLeaderboardTypeUsingLeaderboardType)
	t.Run("MatchLeaderboardToMatchUsingMatch", testMatchLeaderboardToOneMatchUsingMatch)
	t.Run("MatchLeaderboardToTransactionUsingTransaction", testMatchLeaderboardToOneTransactionUsingTransaction)
	t.Run("MatchLeaderboardToUserUsingUser", testMatchLeaderboardToOneUserUsingUser)
	t.Run("MatchNotificationToMatchUsingMatch", testMatchNotificationToOneMatchUsingMatch)
	t.Run("MatchNotificationToUserUsingUser", testMatchNotificationToOneUserUsingUser)
	t.Run("MatchPlayerToMatchUsingMatch", testMatchPlayerToOneMatchUsingMatch)
	t.Run("MatchPlayerToPlayerUsingPlayer", testMatchPlayerToOnePlayerUsingPlayer)
	t.Run("MatchPlayerToTeamUsingTeam", testMatchPlayerToOneTeamUsingTeam)
	t.Run("MatchRewardToMatchUsingMatch", testMatchRewardToOneMatchUsingMatch)
	t.Run("MatchToTeamUsingAwayTeam", testMatchToOneTeamUsingAwayTeam)
	t.Run("MatchToCompetitionUsingCompetition", testMatchToOneCompetitionUsingCompetition)
	t.Run("MatchToCompetitionEditionUsingEdition", testMatchToOneCompetitionEditionUsingEdition)
	t.Run("MatchToTeamUsingHomeTeam", testMatchToOneTeamUsingHomeTeam)
	t.Run("MatchToMatchDayUsingMatchDay", testMatchToOneMatchDayUsingMatchDay)
	t.Run("MatchToSeasonUsingSeason", testMatchToOneSeasonUsingSeason)
	t.Run("MatchToMatchUsingSimulationFromMatch", testMatchToOneMatchUsingSimulationFromMatch)
	t.Run("MatchToSportUsingSport", testMatchToOneSportUsingSport)
	t.Run("OptaFeedItemVersionToOptaFeedItemUsingItem", testOptaFeedItemVersionToOneOptaFeedItemUsingItem)
	t.Run("OptaFeedItemToOptaFeedItemVersionUsingCurrentVersion", testOptaFeedItemToOneOptaFeedItemVersionUsingCurrentVersion)
	t.Run("OptaFeedItemToMatchUsingMatch", testOptaFeedItemToOneMatchUsingMatch)
	t.Run("OptaFeedToMatchUsingMatch", testOptaFeedToOneMatchUsingMatch)
	t.Run("OrderToItemUsingItem", testOrderToOneItemUsingItem)
	t.Run("OrderToUserUsingUser", testOrderToOneUserUsingUser)
	t.Run("PlayerBucketToCountryUsingCountry", testPlayerBucketToOneCountryUsingCountry)
	t.Run("PlayerBucketToTeamUsingTeam", testPlayerBucketToOneTeamUsingTeam)
	t.Run("PlayerToSoccerWikiPlayerUsingSoccerWikiPlayer", testPlayerToOneSoccerWikiPlayerUsingSoccerWikiPlayer)
	t.Run("PowerupActionToActionUsingAction", testPowerupActionToOneActionUsingAction)
	t.Run("PowerupActionToPowerupUsingPowerup", testPowerupActionToOnePowerupUsingPowerup)
	t.Run("PowerupToSportUsingSport", testPowerupToOneSportUsingSport)
	t.Run("PushNotificationToMatchUsingMatch", testPushNotificationToOneMatchUsingMatch)
	t.Run("PushNotificationToUserUsingUser", testPushNotificationToOneUserUsingUser)
	t.Run("SeasonCompetitionMemberToCompetitionUsingCompetition", testSeasonCompetitionMemberToOneCompetitionUsingCompetition)
	t.Run("SeasonCompetitionMemberToSeasonUsingSeason", testSeasonCompetitionMemberToOneSeasonUsingSeason)
	t.Run("SeasonCompetitionMemberToTeamUsingTeam", testSeasonCompetitionMemberToOneTeamUsingTeam)
	t.Run("SeasonTeamPlayerToPlayerUsingPlayer", testSeasonTeamPlayerToOnePlayerUsingPlayer)
	t.Run("SeasonTeamPlayerToSeasonUsingSeason", testSeasonTeamPlayerToOneSeasonUsingSeason)
	t.Run("SeasonTeamPlayerToTeamUsingTeam", testSeasonTeamPlayerToOneTeamUsingTeam)
	t.Run("SelectionTeamPlayerToPlayerUsingPlayer", testSelectionTeamPlayerToOnePlayerUsingPlayer)
	t.Run("StoreProductTransactionToStoreProductUsingProduct", testStoreProductTransactionToOneStoreProductUsingProduct)
	t.Run("StoreProductTransactionToTransactionUsingTransaction", testStoreProductTransactionToOneTransactionUsingTransaction)
	t.Run("StoreProductTransactionToUserUsingUser", testStoreProductTransactionToOneUserUsingUser)
	t.Run("SubscriptionHistoryToSubscriptionUsingSubscription", testSubscriptionHistoryToOneSubscriptionUsingSubscription)
	t.Run("SubscriptionRequestToUserUsingAppUser", testSubscriptionRequestToOneUserUsingAppUser)
	t.Run("TeamToCountryUsingCountry", testTeamToOneCountryUsingCountry)
	t.Run("TeamToRegionUsingRegion", testTeamToOneRegionUsingRegion)
	t.Run("TransactionToMatchUsingMatch", testTransactionToOneMatchUsingMatch)
	t.Run("TransactionToOrderUsingOrder", testTransactionToOneOrderUsingOrder)
	t.Run("TransactionToUserUsingUser", testTransactionToOneUserUsingUser)
	t.Run("TransactionToGameWeekUsingWeek", testTransactionToOneGameWeekUsingWeek)
	t.Run("UserBadgeToBadgeUsingBadge", testUserBadgeToOneBadgeUsingBadge)
	t.Run("UserBadgeToUserUsingUser", testUserBadgeToOneUserUsingUser)
	t.Run("UserBannerToBannerUsingBanner", testUserBannerToOneBannerUsingBanner)
	t.Run("UserBannerToUserUsingUser", testUserBannerToOneUserUsingUser)
	t.Run("UserDivisionToDivisionUsingDivision", testUserDivisionToOneDivisionUsingDivision)
	t.Run("UserDivisionToGameWeekUsingGameWeek", testUserDivisionToOneGameWeekUsingGameWeek)
	t.Run("UserDivisionToUserUsingUser", testUserDivisionToOneUserUsingUser)
	t.Run("UserFrameToFrameUsingFrame", testUserFrameToOneFrameUsingFrame)
	t.Run("UserFrameToUserUsingUser", testUserFrameToOneUserUsingUser)
	t.Run("UserGameWeekHistoryToDivisionUsingNewDivision", testUserGameWeekHistoryToOneDivisionUsingNewDivision)
	t.Run("UserGameWeekHistoryToDivisionUsingWeekDivision", testUserGameWeekHistoryToOneDivisionUsingWeekDivision)
	t.Run("UserGameWeekHistoryToGameWeekUsingGameWeek", testUserGameWeekHistoryToOneGameWeekUsingGameWeek)
	t.Run("UserGameWeekHistoryToUserUsingUser", testUserGameWeekHistoryToOneUserUsingUser)
	t.Run("UserLeaderboardSubscriptionToLeaderboardUsingLeaderboard", testUserLeaderboardSubscriptionToOneLeaderboardUsingLeaderboard)
	t.Run("UserLeaderboardSubscriptionToUserUsingUser", testUserLeaderboardSubscriptionToOneUserUsingUser)
	t.Run("UserToUserUsingReferrer", testUserToOneUserUsingReferrer)
	t.Run("UserToSubscriptionUsingSubscription", testUserToOneSubscriptionUsingSubscription)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {
	t.Run("ChatRoomToChatRoomMemberUsingRoomChatRoomMember", testChatRoomOneToOneChatRoomMemberUsingRoomChatRoomMember)
	t.Run("UserToChatRoomMemberUsingChatRoomMember", testUserOneToOneChatRoomMemberUsingChatRoomMember)
}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("ActionToPowerupActions", testActionToManyPowerupActions)
	t.Run("AssignedPlayerToGamePicks", testAssignedPlayerToManyGamePicks)
	t.Run("AuthGroupToGroupAuthGroupPermissions", testAuthGroupToManyGroupAuthGroupPermissions)
	t.Run("AuthGroupToGroupAuthUserGroups", testAuthGroupToManyGroupAuthUserGroups)
	t.Run("AuthPermissionToPermissionAuthGroupPermissions", testAuthPermissionToManyPermissionAuthGroupPermissions)
	t.Run("AuthPermissionToPermissionAuthUserUserPermissions", testAuthPermissionToManyPermissionAuthUserUserPermissions)
	t.Run("AuthUserToUserAuthUserGroups", testAuthUserToManyUserAuthUserGroups)
	t.Run("AuthUserToUserAuthUserUserPermissions", testAuthUserToManyUserAuthUserUserPermissions)
	t.Run("AuthUserToUserDjangoAdminLogs", testAuthUserToManyUserDjangoAdminLogs)
	t.Run("BadgeToUserBadges", testBadgeToManyUserBadges)
	t.Run("BannerToUserBanners", testBannerToManyUserBanners)
	t.Run("CardPackTypeToAssignedCardPacks", testCardPackTypeToManyAssignedCardPacks)
	t.Run("ChatRoomToRoomChatMessages", testChatRoomToManyRoomChatMessages)
	t.Run("CompetitionConfigToConfigCompetitions", testCompetitionConfigToManyConfigCompetitions)
	t.Run("CompetitionEditionToCompetitionPhases", testCompetitionEditionToManyCompetitionPhases)
	t.Run("CompetitionEditionToEditionMatches", testCompetitionEditionToManyEditionMatches)
	t.Run("CompetitionToRelatedCompetitionCompetitionConfigs", testCompetitionToManyRelatedCompetitionCompetitionConfigs)
	t.Run("CompetitionToCompetitionEditions", testCompetitionToManyCompetitionEditions)
	t.Run("CompetitionToMatches", testCompetitionToManyMatches)
	t.Run("CompetitionToSeasonCompetitionMembers", testCompetitionToManySeasonCompetitionMembers)
	t.Run("CountryToLeaderboards", testCountryToManyLeaderboards)
	t.Run("CountryToPlayerBuckets", testCountryToManyPlayerBuckets)
	t.Run("CountryToTeams", testCountryToManyTeams)
	t.Run("DivisionToDivisionRewards", testDivisionToManyDivisionRewards)
	t.Run("DivisionToGameWeekDivisions", testDivisionToManyGameWeekDivisions)
	t.Run("DivisionToMatchLeaderboards", testDivisionToManyMatchLeaderboards)
	t.Run("DivisionToUserDivisions", testDivisionToManyUserDivisions)
	t.Run("DivisionToNewDivisionUserGameWeekHistories", testDivisionToManyNewDivisionUserGameWeekHistories)
	t.Run("DivisionToWeekDivisionUserGameWeekHistories", testDivisionToManyWeekDivisionUserGameWeekHistories)
	t.Run("DjangoCeleryBeatClockedscheduleToClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatClockedscheduleToManyClockedDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatCrontabscheduleToCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatCrontabscheduleToManyCrontabDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatIntervalscheduleToIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatIntervalscheduleToManyIntervalDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatSolarscheduleToSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatSolarscheduleToManySolarDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoContentTypeToContentTypeAuthPermissions", testDjangoContentTypeToManyContentTypeAuthPermissions)
	t.Run("DjangoContentTypeToContentTypeDjangoAdminLogs", testDjangoContentTypeToManyContentTypeDjangoAdminLogs)
	t.Run("FrameToUserFrames", testFrameToManyUserFrames)
	t.Run("GamePickToGameEvents", testGamePickToManyGameEvents)
	t.Run("GamePowerupToPowerupGameEvents", testGamePowerupToManyPowerupGameEvents)
	t.Run("GameSeasonToSeasonGameWeeks", testGameSeasonToManySeasonGameWeeks)
	t.Run("GameWeekToGameWeekIDAppInboxes", testGameWeekToManyGameWeekIDAppInboxes)
	t.Run("GameWeekToWeekDivisionRewards", testGameWeekToManyWeekDivisionRewards)
	t.Run("GameWeekToWeekGameWeekDivisions", testGameWeekToManyWeekGameWeekDivisions)
	t.Run("GameWeekToWeekTransactions", testGameWeekToManyWeekTransactions)
	t.Run("GameWeekToUserDivisions", testGameWeekToManyUserDivisions)
	t.Run("GameWeekToUserGameWeekHistories", testGameWeekToManyUserGameWeekHistories)
	t.Run("GameToAppInboxes", testGameToManyAppInboxes)
	t.Run("GameToGameEvents", testGameToManyGameEvents)
	t.Run("GameToGamePicks", testGameToManyGamePicks)
	t.Run("GameToGamePowerups", testGameToManyGamePowerups)
	t.Run("GameToMatchLeaderboards", testGameToManyMatchLeaderboards)
	t.Run("ItemToOrders", testItemToManyOrders)
	t.Run("LeaderboardTypeToMatchLeaderboards", testLeaderboardTypeToManyMatchLeaderboards)
	t.Run("LeaderboardToUserLeaderboardSubscriptions", testLeaderboardToManyUserLeaderboardSubscriptions)
	t.Run("MatchDayToMatches", testMatchDayToManyMatches)
	t.Run("MatchEventToGameEvents", testMatchEventToManyGameEvents)
	t.Run("MatchEventToMatchEventSimulations", testMatchEventToManyMatchEventSimulations)
	t.Run("MatchLeaderboardToLeaderboardGameWeeks", testMatchLeaderboardToManyLeaderboardGameWeeks)
	t.Run("MatchToMatchIDAppInboxes", testMatchToManyMatchIDAppInboxes)
	t.Run("MatchToChatRooms", testMatchToManyChatRooms)
	t.Run("MatchToGames", testMatchToManyGames)
	t.Run("MatchToMatchEventProcessors", testMatchToManyMatchEventProcessors)
	t.Run("MatchToMatchEventSimulations", testMatchToManyMatchEventSimulations)
	t.Run("MatchToMatchEvents", testMatchToManyMatchEvents)
	t.Run("MatchToMatchHeadlines", testMatchToManyMatchHeadlines)
	t.Run("MatchToMatchLeaderboards", testMatchToManyMatchLeaderboards)
	t.Run("MatchToMatchNotifications", testMatchToManyMatchNotifications)
	t.Run("MatchToMatchPlayers", testMatchToManyMatchPlayers)
	t.Run("MatchToMatchRewards", testMatchToManyMatchRewards)
	t.Run("MatchToSimulationFromMatchMatches", testMatchToManySimulationFromMatchMatches)
	t.Run("MatchToOptaFeedItems", testMatchToManyOptaFeedItems)
	t.Run("MatchToOptaFeeds", testMatchToManyOptaFeeds)
	t.Run("MatchToPushNotifications", testMatchToManyPushNotifications)
	t.Run("MatchToTransactions", testMatchToManyTransactions)
	t.Run("NFTBucketToPlayerNFTAssignedPlayers", testNFTBucketToManyPlayerNFTAssignedPlayers)
	t.Run("OptaFeedItemVersionToMatchEvents", testOptaFeedItemVersionToManyMatchEvents)
	t.Run("OptaFeedItemVersionToCurrentVersionOptaFeedItems", testOptaFeedItemVersionToManyCurrentVersionOptaFeedItems)
	t.Run("OptaFeedItemToItemOptaFeedItemVersions", testOptaFeedItemToManyItemOptaFeedItemVersions)
	t.Run("OrderToTransactions", testOrderToManyTransactions)
	t.Run("PlayerToGameEvents", testPlayerToManyGameEvents)
	t.Run("PlayerToGamePicks", testPlayerToManyGamePicks)
	t.Run("PlayerToMatchEvents", testPlayerToManyMatchEvents)
	t.Run("PlayerToMatchPlayers", testPlayerToManyMatchPlayers)
	t.Run("PlayerToSeasonTeamPlayers", testPlayerToManySeasonTeamPlayers)
	t.Run("PlayerToSelectionTeamPlayers", testPlayerToManySelectionTeamPlayers)
	t.Run("PowerupToGamePowerups", testPowerupToManyGamePowerups)
	t.Run("PowerupToPowerupActions", testPowerupToManyPowerupActions)
	t.Run("RegionToTeams", testRegionToManyTeams)
	t.Run("RewardToAppInboxes", testRewardToManyAppInboxes)
	t.Run("RewardToDivisionRewards", testRewardToManyDivisionRewards)
	t.Run("SeasonToLeaderboards", testSeasonToManyLeaderboards)
	t.Run("SeasonToMatches", testSeasonToManyMatches)
	t.Run("SeasonToSeasonCompetitionMembers", testSeasonToManySeasonCompetitionMembers)
	t.Run("SeasonToSeasonTeamPlayers", testSeasonToManySeasonTeamPlayers)
	t.Run("SoccerWikiPlayerToPlayers", testSoccerWikiPlayerToManyPlayers)
	t.Run("SportToActions", testSportToManyActions)
	t.Run("SportToCompetitionConfigs", testSportToManyCompetitionConfigs)
	t.Run("SportToCompetitions", testSportToManyCompetitions)
	t.Run("SportToGames", testSportToManyGames)
	t.Run("SportToMatches", testSportToManyMatches)
	t.Run("SportToPowerups", testSportToManyPowerups)
	t.Run("StoreProductTransactionToStoreTransactionAssignedCardPacks", testStoreProductTransactionToManyStoreTransactionAssignedCardPacks)
	t.Run("StoreProductToProductStoreProductTransactions", testStoreProductToManyProductStoreProductTransactions)
	t.Run("SubscriptionToSubscriptionHistories", testSubscriptionToManySubscriptionHistories)
	t.Run("SubscriptionToUsers", testSubscriptionToManyUsers)
	t.Run("TeamToGameEvents", testTeamToManyGameEvents)
	t.Run("TeamToLeaderboards", testTeamToManyLeaderboards)
	t.Run("TeamToMatchEvents", testTeamToManyMatchEvents)
	t.Run("TeamToMatchPlayers", testTeamToManyMatchPlayers)
	t.Run("TeamToAwayTeamMatches", testTeamToManyAwayTeamMatches)
	t.Run("TeamToHomeTeamMatches", testTeamToManyHomeTeamMatches)
	t.Run("TeamToPlayerBuckets", testTeamToManyPlayerBuckets)
	t.Run("TeamToSeasonCompetitionMembers", testTeamToManySeasonCompetitionMembers)
	t.Run("TeamToSeasonTeamPlayers", testTeamToManySeasonTeamPlayers)
	t.Run("TransactionToMatchLeaderboards", testTransactionToManyMatchLeaderboards)
	t.Run("TransactionToStoreProductTransactions", testTransactionToManyStoreProductTransactions)
	t.Run("UserToAppInboxes", testUserToManyAppInboxes)
	t.Run("UserToAssignedCardPacks", testUserToManyAssignedCardPacks)
	t.Run("UserToBanPenalties", testUserToManyBanPenalties)
	t.Run("UserToSenderChatMessages", testUserToManySenderChatMessages)
	t.Run("UserToFromUserFollowers", testUserToManyFromUserFollowers)
	t.Run("UserToToUserFollowers", testUserToManyToUserFollowers)
	t.Run("UserToGames", testUserToManyGames)
	t.Run("UserToManualSubscriptions", testUserToManyManualSubscriptions)
	t.Run("UserToMatchLeaderboards", testUserToManyMatchLeaderboards)
	t.Run("UserToMatchNotifications", testUserToManyMatchNotifications)
	t.Run("UserToOrders", testUserToManyOrders)
	t.Run("UserToPushNotifications", testUserToManyPushNotifications)
	t.Run("UserToStoreProductTransactions", testUserToManyStoreProductTransactions)
	t.Run("UserToAppUserSubscriptionRequests", testUserToManyAppUserSubscriptionRequests)
	t.Run("UserToTransactions", testUserToManyTransactions)
	t.Run("UserToUserBadges", testUserToManyUserBadges)
	t.Run("UserToUserBanners", testUserToManyUserBanners)
	t.Run("UserToUserDivisions", testUserToManyUserDivisions)
	t.Run("UserToUserFrames", testUserToManyUserFrames)
	t.Run("UserToUserGameWeekHistories", testUserToManyUserGameWeekHistories)
	t.Run("UserToUserLeaderboardSubscriptions", testUserToManyUserLeaderboardSubscriptions)
	t.Run("UserToReferrerUsers", testUserToManyReferrerUsers)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("ActionToSportUsingActions", testActionToOneSetOpSportUsingSport)
	t.Run("AppInboxToGameUsingAppInboxes", testAppInboxToOneSetOpGameUsingGame)
	t.Run("AppInboxToGameWeekUsingGameWeekIDAppInboxes", testAppInboxToOneSetOpGameWeekUsingGameWeekID)
	t.Run("AppInboxToMatchUsingMatchIDAppInboxes", testAppInboxToOneSetOpMatchUsingMatchID)
	t.Run("AppInboxToRewardUsingAppInboxes", testAppInboxToOneSetOpRewardUsingReward)
	t.Run("AppInboxToUserUsingAppInboxes", testAppInboxToOneSetOpUserUsingUser)
	t.Run("AssignedCardPackToCardPackTypeUsingAssignedCardPacks", testAssignedCardPackToOneSetOpCardPackTypeUsingCardPackType)
	t.Run("AssignedCardPackToStoreProductTransactionUsingStoreTransactionAssignedCardPacks", testAssignedCardPackToOneSetOpStoreProductTransactionUsingStoreTransaction)
	t.Run("AssignedCardPackToUserUsingAssignedCardPacks", testAssignedCardPackToOneSetOpUserUsingUser)
	t.Run("AssignedPlayerToNFTBucketUsingPlayerNFTAssignedPlayers", testAssignedPlayerToOneSetOpNFTBucketUsingPlayerNFT)
	t.Run("AuthGroupPermissionToAuthPermissionUsingPermissionAuthGroupPermissions", testAuthGroupPermissionToOneSetOpAuthPermissionUsingPermission)
	t.Run("AuthGroupPermissionToAuthGroupUsingGroupAuthGroupPermissions", testAuthGroupPermissionToOneSetOpAuthGroupUsingGroup)
	t.Run("AuthPermissionToDjangoContentTypeUsingContentTypeAuthPermissions", testAuthPermissionToOneSetOpDjangoContentTypeUsingContentType)
	t.Run("AuthUserGroupToAuthGroupUsingGroupAuthUserGroups", testAuthUserGroupToOneSetOpAuthGroupUsingGroup)
	t.Run("AuthUserGroupToAuthUserUsingUserAuthUserGroups", testAuthUserGroupToOneSetOpAuthUserUsingUser)
	t.Run("AuthUserUserPermissionToAuthPermissionUsingPermissionAuthUserUserPermissions", testAuthUserUserPermissionToOneSetOpAuthPermissionUsingPermission)
	t.Run("AuthUserUserPermissionToAuthUserUsingUserAuthUserUserPermissions", testAuthUserUserPermissionToOneSetOpAuthUserUsingUser)
	t.Run("BanPenaltyToUserUsingBanPenalties", testBanPenaltyToOneSetOpUserUsingUser)
	t.Run("ChatMessageToChatRoomUsingRoomChatMessages", testChatMessageToOneSetOpChatRoomUsingRoom)
	t.Run("ChatMessageToUserUsingSenderChatMessages", testChatMessageToOneSetOpUserUsingSender)
	t.Run("ChatRoomMemberToChatRoomUsingRoomChatRoomMember", testChatRoomMemberToOneSetOpChatRoomUsingRoom)
	t.Run("ChatRoomMemberToUserUsingChatRoomMember", testChatRoomMemberToOneSetOpUserUsingUser)
	t.Run("ChatRoomToMatchUsingChatRooms", testChatRoomToOneSetOpMatchUsingMatch)
	t.Run("CompetitionConfigToCompetitionUsingRelatedCompetitionCompetitionConfigs", testCompetitionConfigToOneSetOpCompetitionUsingRelatedCompetition)
	t.Run("CompetitionConfigToSportUsingCompetitionConfigs", testCompetitionConfigToOneSetOpSportUsingSport)
	t.Run("CompetitionEditionToCompetitionUsingCompetitionEditions", testCompetitionEditionToOneSetOpCompetitionUsingCompetition)
	t.Run("CompetitionPhaseToCompetitionEditionUsingCompetitionPhases", testCompetitionPhaseToOneSetOpCompetitionEditionUsingCompetitionEdition)
	t.Run("CompetitionToCompetitionConfigUsingConfigCompetitions", testCompetitionToOneSetOpCompetitionConfigUsingConfig)
	t.Run("CompetitionToSportUsingCompetitions", testCompetitionToOneSetOpSportUsingSport)
	t.Run("DivisionRewardToDivisionUsingDivisionRewards", testDivisionRewardToOneSetOpDivisionUsingDivision)
	t.Run("DivisionRewardToRewardUsingDivisionRewards", testDivisionRewardToOneSetOpRewardUsingReward)
	t.Run("DivisionRewardToGameWeekUsingWeekDivisionRewards", testDivisionRewardToOneSetOpGameWeekUsingWeek)
	t.Run("DjangoAdminLogToDjangoContentTypeUsingContentTypeDjangoAdminLogs", testDjangoAdminLogToOneSetOpDjangoContentTypeUsingContentType)
	t.Run("DjangoAdminLogToAuthUserUsingUserDjangoAdminLogs", testDjangoAdminLogToOneSetOpAuthUserUsingUser)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatClockedscheduleUsingClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneSetOpDjangoCeleryBeatClockedscheduleUsingClocked)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatCrontabscheduleUsingCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneSetOpDjangoCeleryBeatCrontabscheduleUsingCrontab)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatIntervalscheduleUsingIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneSetOpDjangoCeleryBeatIntervalscheduleUsingInterval)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatSolarscheduleUsingSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneSetOpDjangoCeleryBeatSolarscheduleUsingSolar)
	t.Run("FollowerToUserUsingFromUserFollowers", testFollowerToOneSetOpUserUsingFromUser)
	t.Run("FollowerToUserUsingToUserFollowers", testFollowerToOneSetOpUserUsingToUser)
	t.Run("GameEventToGameUsingGameEvents", testGameEventToOneSetOpGameUsingGame)
	t.Run("GameEventToGamePickUsingGameEvents", testGameEventToOneSetOpGamePickUsingGamePick)
	t.Run("GameEventToMatchEventUsingGameEvents", testGameEventToOneSetOpMatchEventUsingMatchEvent)
	t.Run("GameEventToPlayerUsingGameEvents", testGameEventToOneSetOpPlayerUsingPlayer)
	t.Run("GameEventToGamePowerupUsingPowerupGameEvents", testGameEventToOneSetOpGamePowerupUsingPowerup)
	t.Run("GameEventToTeamUsingGameEvents", testGameEventToOneSetOpTeamUsingTeam)
	t.Run("GamePickToAssignedPlayerUsingGamePicks", testGamePickToOneSetOpAssignedPlayerUsingAssignedPlayer)
	t.Run("GamePickToGameUsingGamePicks", testGamePickToOneSetOpGameUsingGame)
	t.Run("GamePickToPlayerUsingGamePicks", testGamePickToOneSetOpPlayerUsingPlayer)
	t.Run("GamePowerupToGameUsingGamePowerups", testGamePowerupToOneSetOpGameUsingGame)
	t.Run("GamePowerupToPowerupUsingGamePowerups", testGamePowerupToOneSetOpPowerupUsingPowerup)
	t.Run("GameWeekDivisionToDivisionUsingGameWeekDivisions", testGameWeekDivisionToOneSetOpDivisionUsingDivision)
	t.Run("GameWeekDivisionToGameWeekUsingWeekGameWeekDivisions", testGameWeekDivisionToOneSetOpGameWeekUsingWeek)
	t.Run("GameWeekToMatchLeaderboardUsingLeaderboardGameWeeks", testGameWeekToOneSetOpMatchLeaderboardUsingLeaderboard)
	t.Run("GameWeekToGameSeasonUsingSeasonGameWeeks", testGameWeekToOneSetOpGameSeasonUsingSeason)
	t.Run("GameToMatchUsingGames", testGameToOneSetOpMatchUsingMatch)
	t.Run("GameToSportUsingGames", testGameToOneSetOpSportUsingSport)
	t.Run("GameToUserUsingGames", testGameToOneSetOpUserUsingUser)
	t.Run("LeaderboardToCountryUsingLeaderboards", testLeaderboardToOneSetOpCountryUsingCountry)
	t.Run("LeaderboardToSeasonUsingLeaderboards", testLeaderboardToOneSetOpSeasonUsingSeason)
	t.Run("LeaderboardToTeamUsingLeaderboards", testLeaderboardToOneSetOpTeamUsingTeam)
	t.Run("ManualSubscriptionToUserUsingManualSubscriptions", testManualSubscriptionToOneSetOpUserUsingUser)
	t.Run("MatchEventProcessorToMatchUsingMatchEventProcessors", testMatchEventProcessorToOneSetOpMatchUsingMatch)
	t.Run("MatchEventSimulationToMatchEventUsingMatchEventSimulations", testMatchEventSimulationToOneSetOpMatchEventUsingMatchEvent)
	t.Run("MatchEventSimulationToMatchUsingMatchEventSimulations", testMatchEventSimulationToOneSetOpMatchUsingMatch)
	t.Run("MatchEventToMatchUsingMatchEvents", testMatchEventToOneSetOpMatchUsingMatch)
	t.Run("MatchEventToOptaFeedItemVersionUsingMatchEvents", testMatchEventToOneSetOpOptaFeedItemVersionUsingOptaFeedItemVersion)
	t.Run("MatchEventToPlayerUsingMatchEvents", testMatchEventToOneSetOpPlayerUsingPlayer)
	t.Run("MatchEventToTeamUsingMatchEvents", testMatchEventToOneSetOpTeamUsingTeam)
	t.Run("MatchHeadlineToMatchUsingMatchHeadlines", testMatchHeadlineToOneSetOpMatchUsingMatch)
	t.Run("MatchLeaderboardToDivisionUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpDivisionUsingDivision)
	t.Run("MatchLeaderboardToGameUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpGameUsingGame)
	t.Run("MatchLeaderboardToLeaderboardTypeUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpLeaderboardTypeUsingLeaderboardType)
	t.Run("MatchLeaderboardToMatchUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpMatchUsingMatch)
	t.Run("MatchLeaderboardToTransactionUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpTransactionUsingTransaction)
	t.Run("MatchLeaderboardToUserUsingMatchLeaderboards", testMatchLeaderboardToOneSetOpUserUsingUser)
	t.Run("MatchNotificationToMatchUsingMatchNotifications", testMatchNotificationToOneSetOpMatchUsingMatch)
	t.Run("MatchNotificationToUserUsingMatchNotifications", testMatchNotificationToOneSetOpUserUsingUser)
	t.Run("MatchPlayerToMatchUsingMatchPlayers", testMatchPlayerToOneSetOpMatchUsingMatch)
	t.Run("MatchPlayerToPlayerUsingMatchPlayers", testMatchPlayerToOneSetOpPlayerUsingPlayer)
	t.Run("MatchPlayerToTeamUsingMatchPlayers", testMatchPlayerToOneSetOpTeamUsingTeam)
	t.Run("MatchRewardToMatchUsingMatchRewards", testMatchRewardToOneSetOpMatchUsingMatch)
	t.Run("MatchToTeamUsingAwayTeamMatches", testMatchToOneSetOpTeamUsingAwayTeam)
	t.Run("MatchToCompetitionUsingMatches", testMatchToOneSetOpCompetitionUsingCompetition)
	t.Run("MatchToCompetitionEditionUsingEditionMatches", testMatchToOneSetOpCompetitionEditionUsingEdition)
	t.Run("MatchToTeamUsingHomeTeamMatches", testMatchToOneSetOpTeamUsingHomeTeam)
	t.Run("MatchToMatchDayUsingMatches", testMatchToOneSetOpMatchDayUsingMatchDay)
	t.Run("MatchToSeasonUsingMatches", testMatchToOneSetOpSeasonUsingSeason)
	t.Run("MatchToMatchUsingSimulationFromMatchMatches", testMatchToOneSetOpMatchUsingSimulationFromMatch)
	t.Run("MatchToSportUsingMatches", testMatchToOneSetOpSportUsingSport)
	t.Run("OptaFeedItemVersionToOptaFeedItemUsingItemOptaFeedItemVersions", testOptaFeedItemVersionToOneSetOpOptaFeedItemUsingItem)
	t.Run("OptaFeedItemToOptaFeedItemVersionUsingCurrentVersionOptaFeedItems", testOptaFeedItemToOneSetOpOptaFeedItemVersionUsingCurrentVersion)
	t.Run("OptaFeedItemToMatchUsingOptaFeedItems", testOptaFeedItemToOneSetOpMatchUsingMatch)
	t.Run("OptaFeedToMatchUsingOptaFeeds", testOptaFeedToOneSetOpMatchUsingMatch)
	t.Run("OrderToItemUsingOrders", testOrderToOneSetOpItemUsingItem)
	t.Run("OrderToUserUsingOrders", testOrderToOneSetOpUserUsingUser)
	t.Run("PlayerBucketToCountryUsingPlayerBuckets", testPlayerBucketToOneSetOpCountryUsingCountry)
	t.Run("PlayerBucketToTeamUsingPlayerBuckets", testPlayerBucketToOneSetOpTeamUsingTeam)
	t.Run("PlayerToSoccerWikiPlayerUsingPlayers", testPlayerToOneSetOpSoccerWikiPlayerUsingSoccerWikiPlayer)
	t.Run("PowerupActionToActionUsingPowerupActions", testPowerupActionToOneSetOpActionUsingAction)
	t.Run("PowerupActionToPowerupUsingPowerupActions", testPowerupActionToOneSetOpPowerupUsingPowerup)
	t.Run("PowerupToSportUsingPowerups", testPowerupToOneSetOpSportUsingSport)
	t.Run("PushNotificationToMatchUsingPushNotifications", testPushNotificationToOneSetOpMatchUsingMatch)
	t.Run("PushNotificationToUserUsingPushNotifications", testPushNotificationToOneSetOpUserUsingUser)
	t.Run("SeasonCompetitionMemberToCompetitionUsingSeasonCompetitionMembers", testSeasonCompetitionMemberToOneSetOpCompetitionUsingCompetition)
	t.Run("SeasonCompetitionMemberToSeasonUsingSeasonCompetitionMembers", testSeasonCompetitionMemberToOneSetOpSeasonUsingSeason)
	t.Run("SeasonCompetitionMemberToTeamUsingSeasonCompetitionMembers", testSeasonCompetitionMemberToOneSetOpTeamUsingTeam)
	t.Run("SeasonTeamPlayerToPlayerUsingSeasonTeamPlayers", testSeasonTeamPlayerToOneSetOpPlayerUsingPlayer)
	t.Run("SeasonTeamPlayerToSeasonUsingSeasonTeamPlayers", testSeasonTeamPlayerToOneSetOpSeasonUsingSeason)
	t.Run("SeasonTeamPlayerToTeamUsingSeasonTeamPlayers", testSeasonTeamPlayerToOneSetOpTeamUsingTeam)
	t.Run("SelectionTeamPlayerToPlayerUsingSelectionTeamPlayers", testSelectionTeamPlayerToOneSetOpPlayerUsingPlayer)
	t.Run("StoreProductTransactionToStoreProductUsingProductStoreProductTransactions", testStoreProductTransactionToOneSetOpStoreProductUsingProduct)
	t.Run("StoreProductTransactionToTransactionUsingStoreProductTransactions", testStoreProductTransactionToOneSetOpTransactionUsingTransaction)
	t.Run("StoreProductTransactionToUserUsingStoreProductTransactions", testStoreProductTransactionToOneSetOpUserUsingUser)
	t.Run("SubscriptionHistoryToSubscriptionUsingSubscriptionHistories", testSubscriptionHistoryToOneSetOpSubscriptionUsingSubscription)
	t.Run("SubscriptionRequestToUserUsingAppUserSubscriptionRequests", testSubscriptionRequestToOneSetOpUserUsingAppUser)
	t.Run("TeamToCountryUsingTeams", testTeamToOneSetOpCountryUsingCountry)
	t.Run("TeamToRegionUsingTeams", testTeamToOneSetOpRegionUsingRegion)
	t.Run("TransactionToMatchUsingTransactions", testTransactionToOneSetOpMatchUsingMatch)
	t.Run("TransactionToOrderUsingTransactions", testTransactionToOneSetOpOrderUsingOrder)
	t.Run("TransactionToUserUsingTransactions", testTransactionToOneSetOpUserUsingUser)
	t.Run("TransactionToGameWeekUsingWeekTransactions", testTransactionToOneSetOpGameWeekUsingWeek)
	t.Run("UserBadgeToBadgeUsingUserBadges", testUserBadgeToOneSetOpBadgeUsingBadge)
	t.Run("UserBadgeToUserUsingUserBadges", testUserBadgeToOneSetOpUserUsingUser)
	t.Run("UserBannerToBannerUsingUserBanners", testUserBannerToOneSetOpBannerUsingBanner)
	t.Run("UserBannerToUserUsingUserBanners", testUserBannerToOneSetOpUserUsingUser)
	t.Run("UserDivisionToDivisionUsingUserDivisions", testUserDivisionToOneSetOpDivisionUsingDivision)
	t.Run("UserDivisionToGameWeekUsingUserDivisions", testUserDivisionToOneSetOpGameWeekUsingGameWeek)
	t.Run("UserDivisionToUserUsingUserDivisions", testUserDivisionToOneSetOpUserUsingUser)
	t.Run("UserFrameToFrameUsingUserFrames", testUserFrameToOneSetOpFrameUsingFrame)
	t.Run("UserFrameToUserUsingUserFrames", testUserFrameToOneSetOpUserUsingUser)
	t.Run("UserGameWeekHistoryToDivisionUsingNewDivisionUserGameWeekHistories", testUserGameWeekHistoryToOneSetOpDivisionUsingNewDivision)
	t.Run("UserGameWeekHistoryToDivisionUsingWeekDivisionUserGameWeekHistories", testUserGameWeekHistoryToOneSetOpDivisionUsingWeekDivision)
	t.Run("UserGameWeekHistoryToGameWeekUsingUserGameWeekHistories", testUserGameWeekHistoryToOneSetOpGameWeekUsingGameWeek)
	t.Run("UserGameWeekHistoryToUserUsingUserGameWeekHistories", testUserGameWeekHistoryToOneSetOpUserUsingUser)
	t.Run("UserLeaderboardSubscriptionToLeaderboardUsingUserLeaderboardSubscriptions", testUserLeaderboardSubscriptionToOneSetOpLeaderboardUsingLeaderboard)
	t.Run("UserLeaderboardSubscriptionToUserUsingUserLeaderboardSubscriptions", testUserLeaderboardSubscriptionToOneSetOpUserUsingUser)
	t.Run("UserToUserUsingReferrerUsers", testUserToOneSetOpUserUsingReferrer)
	t.Run("UserToSubscriptionUsingUsers", testUserToOneSetOpSubscriptionUsingSubscription)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("ActionToSportUsingActions", testActionToOneRemoveOpSportUsingSport)
	t.Run("AppInboxToGameUsingAppInboxes", testAppInboxToOneRemoveOpGameUsingGame)
	t.Run("AppInboxToGameWeekUsingGameWeekIDAppInboxes", testAppInboxToOneRemoveOpGameWeekUsingGameWeekID)
	t.Run("AppInboxToMatchUsingMatchIDAppInboxes", testAppInboxToOneRemoveOpMatchUsingMatchID)
	t.Run("AppInboxToRewardUsingAppInboxes", testAppInboxToOneRemoveOpRewardUsingReward)
	t.Run("AppInboxToUserUsingAppInboxes", testAppInboxToOneRemoveOpUserUsingUser)
	t.Run("AssignedCardPackToStoreProductTransactionUsingStoreTransactionAssignedCardPacks", testAssignedCardPackToOneRemoveOpStoreProductTransactionUsingStoreTransaction)
	t.Run("AssignedPlayerToNFTBucketUsingPlayerNFTAssignedPlayers", testAssignedPlayerToOneRemoveOpNFTBucketUsingPlayerNFT)
	t.Run("ChatRoomToMatchUsingChatRooms", testChatRoomToOneRemoveOpMatchUsingMatch)
	t.Run("CompetitionConfigToCompetitionUsingRelatedCompetitionCompetitionConfigs", testCompetitionConfigToOneRemoveOpCompetitionUsingRelatedCompetition)
	t.Run("CompetitionConfigToSportUsingCompetitionConfigs", testCompetitionConfigToOneRemoveOpSportUsingSport)
	t.Run("CompetitionToCompetitionConfigUsingConfigCompetitions", testCompetitionToOneRemoveOpCompetitionConfigUsingConfig)
	t.Run("CompetitionToSportUsingCompetitions", testCompetitionToOneRemoveOpSportUsingSport)
	t.Run("DivisionRewardToDivisionUsingDivisionRewards", testDivisionRewardToOneRemoveOpDivisionUsingDivision)
	t.Run("DivisionRewardToRewardUsingDivisionRewards", testDivisionRewardToOneRemoveOpRewardUsingReward)
	t.Run("DjangoAdminLogToDjangoContentTypeUsingContentTypeDjangoAdminLogs", testDjangoAdminLogToOneRemoveOpDjangoContentTypeUsingContentType)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatClockedscheduleUsingClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneRemoveOpDjangoCeleryBeatClockedscheduleUsingClocked)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatCrontabscheduleUsingCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneRemoveOpDjangoCeleryBeatCrontabscheduleUsingCrontab)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatIntervalscheduleUsingIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneRemoveOpDjangoCeleryBeatIntervalscheduleUsingInterval)
	t.Run("DjangoCeleryBeatPeriodictaskToDjangoCeleryBeatSolarscheduleUsingSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatPeriodictaskToOneRemoveOpDjangoCeleryBeatSolarscheduleUsingSolar)
	t.Run("GameEventToMatchEventUsingGameEvents", testGameEventToOneRemoveOpMatchEventUsingMatchEvent)
	t.Run("GameEventToGamePowerupUsingPowerupGameEvents", testGameEventToOneRemoveOpGamePowerupUsingPowerup)
	t.Run("GamePickToAssignedPlayerUsingGamePicks", testGamePickToOneRemoveOpAssignedPlayerUsingAssignedPlayer)
	t.Run("GameWeekToMatchLeaderboardUsingLeaderboardGameWeeks", testGameWeekToOneRemoveOpMatchLeaderboardUsingLeaderboard)
	t.Run("GameWeekToGameSeasonUsingSeasonGameWeeks", testGameWeekToOneRemoveOpGameSeasonUsingSeason)
	t.Run("GameToSportUsingGames", testGameToOneRemoveOpSportUsingSport)
	t.Run("LeaderboardToCountryUsingLeaderboards", testLeaderboardToOneRemoveOpCountryUsingCountry)
	t.Run("LeaderboardToSeasonUsingLeaderboards", testLeaderboardToOneRemoveOpSeasonUsingSeason)
	t.Run("LeaderboardToTeamUsingLeaderboards", testLeaderboardToOneRemoveOpTeamUsingTeam)
	t.Run("MatchEventToOptaFeedItemVersionUsingMatchEvents", testMatchEventToOneRemoveOpOptaFeedItemVersionUsingOptaFeedItemVersion)
	t.Run("MatchEventToPlayerUsingMatchEvents", testMatchEventToOneRemoveOpPlayerUsingPlayer)
	t.Run("MatchEventToTeamUsingMatchEvents", testMatchEventToOneRemoveOpTeamUsingTeam)
	t.Run("MatchLeaderboardToDivisionUsingMatchLeaderboards", testMatchLeaderboardToOneRemoveOpDivisionUsingDivision)
	t.Run("MatchLeaderboardToLeaderboardTypeUsingMatchLeaderboards", testMatchLeaderboardToOneRemoveOpLeaderboardTypeUsingLeaderboardType)
	t.Run("MatchLeaderboardToTransactionUsingMatchLeaderboards", testMatchLeaderboardToOneRemoveOpTransactionUsingTransaction)
	t.Run("MatchNotificationToUserUsingMatchNotifications", testMatchNotificationToOneRemoveOpUserUsingUser)
	t.Run("MatchToCompetitionEditionUsingEditionMatches", testMatchToOneRemoveOpCompetitionEditionUsingEdition)
	t.Run("MatchToMatchDayUsingMatches", testMatchToOneRemoveOpMatchDayUsingMatchDay)
	t.Run("MatchToMatchUsingSimulationFromMatchMatches", testMatchToOneRemoveOpMatchUsingSimulationFromMatch)
	t.Run("MatchToSportUsingMatches", testMatchToOneRemoveOpSportUsingSport)
	t.Run("OptaFeedItemToOptaFeedItemVersionUsingCurrentVersionOptaFeedItems", testOptaFeedItemToOneRemoveOpOptaFeedItemVersionUsingCurrentVersion)
	t.Run("OptaFeedToMatchUsingOptaFeeds", testOptaFeedToOneRemoveOpMatchUsingMatch)
	t.Run("OrderToItemUsingOrders", testOrderToOneRemoveOpItemUsingItem)
	t.Run("PlayerBucketToCountryUsingPlayerBuckets", testPlayerBucketToOneRemoveOpCountryUsingCountry)
	t.Run("PlayerToSoccerWikiPlayerUsingPlayers", testPlayerToOneRemoveOpSoccerWikiPlayerUsingSoccerWikiPlayer)
	t.Run("PowerupToSportUsingPowerups", testPowerupToOneRemoveOpSportUsingSport)
	t.Run("PushNotificationToMatchUsingPushNotifications", testPushNotificationToOneRemoveOpMatchUsingMatch)
	t.Run("StoreProductTransactionToTransactionUsingStoreProductTransactions", testStoreProductTransactionToOneRemoveOpTransactionUsingTransaction)
	t.Run("StoreProductTransactionToUserUsingStoreProductTransactions", testStoreProductTransactionToOneRemoveOpUserUsingUser)
	t.Run("TeamToCountryUsingTeams", testTeamToOneRemoveOpCountryUsingCountry)
	t.Run("TeamToRegionUsingTeams", testTeamToOneRemoveOpRegionUsingRegion)
	t.Run("TransactionToMatchUsingTransactions", testTransactionToOneRemoveOpMatchUsingMatch)
	t.Run("TransactionToOrderUsingTransactions", testTransactionToOneRemoveOpOrderUsingOrder)
	t.Run("TransactionToGameWeekUsingWeekTransactions", testTransactionToOneRemoveOpGameWeekUsingWeek)
	t.Run("UserGameWeekHistoryToDivisionUsingNewDivisionUserGameWeekHistories", testUserGameWeekHistoryToOneRemoveOpDivisionUsingNewDivision)
	t.Run("UserGameWeekHistoryToDivisionUsingWeekDivisionUserGameWeekHistories", testUserGameWeekHistoryToOneRemoveOpDivisionUsingWeekDivision)
	t.Run("UserToUserUsingReferrerUsers", testUserToOneRemoveOpUserUsingReferrer)
	t.Run("UserToSubscriptionUsingUsers", testUserToOneRemoveOpSubscriptionUsingSubscription)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {
	t.Run("ChatRoomToChatRoomMemberUsingRoomChatRoomMember", testChatRoomOneToOneSetOpChatRoomMemberUsingRoomChatRoomMember)
	t.Run("UserToChatRoomMemberUsingChatRoomMember", testUserOneToOneSetOpChatRoomMemberUsingChatRoomMember)
}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("ActionToPowerupActions", testActionToManyAddOpPowerupActions)
	t.Run("AssignedPlayerToGamePicks", testAssignedPlayerToManyAddOpGamePicks)
	t.Run("AuthGroupToGroupAuthGroupPermissions", testAuthGroupToManyAddOpGroupAuthGroupPermissions)
	t.Run("AuthGroupToGroupAuthUserGroups", testAuthGroupToManyAddOpGroupAuthUserGroups)
	t.Run("AuthPermissionToPermissionAuthGroupPermissions", testAuthPermissionToManyAddOpPermissionAuthGroupPermissions)
	t.Run("AuthPermissionToPermissionAuthUserUserPermissions", testAuthPermissionToManyAddOpPermissionAuthUserUserPermissions)
	t.Run("AuthUserToUserAuthUserGroups", testAuthUserToManyAddOpUserAuthUserGroups)
	t.Run("AuthUserToUserAuthUserUserPermissions", testAuthUserToManyAddOpUserAuthUserUserPermissions)
	t.Run("AuthUserToUserDjangoAdminLogs", testAuthUserToManyAddOpUserDjangoAdminLogs)
	t.Run("BadgeToUserBadges", testBadgeToManyAddOpUserBadges)
	t.Run("BannerToUserBanners", testBannerToManyAddOpUserBanners)
	t.Run("CardPackTypeToAssignedCardPacks", testCardPackTypeToManyAddOpAssignedCardPacks)
	t.Run("ChatRoomToRoomChatMessages", testChatRoomToManyAddOpRoomChatMessages)
	t.Run("CompetitionConfigToConfigCompetitions", testCompetitionConfigToManyAddOpConfigCompetitions)
	t.Run("CompetitionEditionToCompetitionPhases", testCompetitionEditionToManyAddOpCompetitionPhases)
	t.Run("CompetitionEditionToEditionMatches", testCompetitionEditionToManyAddOpEditionMatches)
	t.Run("CompetitionToRelatedCompetitionCompetitionConfigs", testCompetitionToManyAddOpRelatedCompetitionCompetitionConfigs)
	t.Run("CompetitionToCompetitionEditions", testCompetitionToManyAddOpCompetitionEditions)
	t.Run("CompetitionToMatches", testCompetitionToManyAddOpMatches)
	t.Run("CompetitionToSeasonCompetitionMembers", testCompetitionToManyAddOpSeasonCompetitionMembers)
	t.Run("CountryToLeaderboards", testCountryToManyAddOpLeaderboards)
	t.Run("CountryToPlayerBuckets", testCountryToManyAddOpPlayerBuckets)
	t.Run("CountryToTeams", testCountryToManyAddOpTeams)
	t.Run("DivisionToDivisionRewards", testDivisionToManyAddOpDivisionRewards)
	t.Run("DivisionToGameWeekDivisions", testDivisionToManyAddOpGameWeekDivisions)
	t.Run("DivisionToMatchLeaderboards", testDivisionToManyAddOpMatchLeaderboards)
	t.Run("DivisionToUserDivisions", testDivisionToManyAddOpUserDivisions)
	t.Run("DivisionToNewDivisionUserGameWeekHistories", testDivisionToManyAddOpNewDivisionUserGameWeekHistories)
	t.Run("DivisionToWeekDivisionUserGameWeekHistories", testDivisionToManyAddOpWeekDivisionUserGameWeekHistories)
	t.Run("DjangoCeleryBeatClockedscheduleToClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatClockedscheduleToManyAddOpClockedDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatCrontabscheduleToCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatCrontabscheduleToManyAddOpCrontabDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatIntervalscheduleToIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatIntervalscheduleToManyAddOpIntervalDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatSolarscheduleToSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatSolarscheduleToManyAddOpSolarDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoContentTypeToContentTypeAuthPermissions", testDjangoContentTypeToManyAddOpContentTypeAuthPermissions)
	t.Run("DjangoContentTypeToContentTypeDjangoAdminLogs", testDjangoContentTypeToManyAddOpContentTypeDjangoAdminLogs)
	t.Run("FrameToUserFrames", testFrameToManyAddOpUserFrames)
	t.Run("GamePickToGameEvents", testGamePickToManyAddOpGameEvents)
	t.Run("GamePowerupToPowerupGameEvents", testGamePowerupToManyAddOpPowerupGameEvents)
	t.Run("GameSeasonToSeasonGameWeeks", testGameSeasonToManyAddOpSeasonGameWeeks)
	t.Run("GameWeekToGameWeekIDAppInboxes", testGameWeekToManyAddOpGameWeekIDAppInboxes)
	t.Run("GameWeekToWeekDivisionRewards", testGameWeekToManyAddOpWeekDivisionRewards)
	t.Run("GameWeekToWeekGameWeekDivisions", testGameWeekToManyAddOpWeekGameWeekDivisions)
	t.Run("GameWeekToWeekTransactions", testGameWeekToManyAddOpWeekTransactions)
	t.Run("GameWeekToUserDivisions", testGameWeekToManyAddOpUserDivisions)
	t.Run("GameWeekToUserGameWeekHistories", testGameWeekToManyAddOpUserGameWeekHistories)
	t.Run("GameToAppInboxes", testGameToManyAddOpAppInboxes)
	t.Run("GameToGameEvents", testGameToManyAddOpGameEvents)
	t.Run("GameToGamePicks", testGameToManyAddOpGamePicks)
	t.Run("GameToGamePowerups", testGameToManyAddOpGamePowerups)
	t.Run("GameToMatchLeaderboards", testGameToManyAddOpMatchLeaderboards)
	t.Run("ItemToOrders", testItemToManyAddOpOrders)
	t.Run("LeaderboardTypeToMatchLeaderboards", testLeaderboardTypeToManyAddOpMatchLeaderboards)
	t.Run("LeaderboardToUserLeaderboardSubscriptions", testLeaderboardToManyAddOpUserLeaderboardSubscriptions)
	t.Run("MatchDayToMatches", testMatchDayToManyAddOpMatches)
	t.Run("MatchEventToGameEvents", testMatchEventToManyAddOpGameEvents)
	t.Run("MatchEventToMatchEventSimulations", testMatchEventToManyAddOpMatchEventSimulations)
	t.Run("MatchLeaderboardToLeaderboardGameWeeks", testMatchLeaderboardToManyAddOpLeaderboardGameWeeks)
	t.Run("MatchToMatchIDAppInboxes", testMatchToManyAddOpMatchIDAppInboxes)
	t.Run("MatchToChatRooms", testMatchToManyAddOpChatRooms)
	t.Run("MatchToGames", testMatchToManyAddOpGames)
	t.Run("MatchToMatchEventProcessors", testMatchToManyAddOpMatchEventProcessors)
	t.Run("MatchToMatchEventSimulations", testMatchToManyAddOpMatchEventSimulations)
	t.Run("MatchToMatchEvents", testMatchToManyAddOpMatchEvents)
	t.Run("MatchToMatchHeadlines", testMatchToManyAddOpMatchHeadlines)
	t.Run("MatchToMatchLeaderboards", testMatchToManyAddOpMatchLeaderboards)
	t.Run("MatchToMatchNotifications", testMatchToManyAddOpMatchNotifications)
	t.Run("MatchToMatchPlayers", testMatchToManyAddOpMatchPlayers)
	t.Run("MatchToMatchRewards", testMatchToManyAddOpMatchRewards)
	t.Run("MatchToSimulationFromMatchMatches", testMatchToManyAddOpSimulationFromMatchMatches)
	t.Run("MatchToOptaFeedItems", testMatchToManyAddOpOptaFeedItems)
	t.Run("MatchToOptaFeeds", testMatchToManyAddOpOptaFeeds)
	t.Run("MatchToPushNotifications", testMatchToManyAddOpPushNotifications)
	t.Run("MatchToTransactions", testMatchToManyAddOpTransactions)
	t.Run("NFTBucketToPlayerNFTAssignedPlayers", testNFTBucketToManyAddOpPlayerNFTAssignedPlayers)
	t.Run("OptaFeedItemVersionToMatchEvents", testOptaFeedItemVersionToManyAddOpMatchEvents)
	t.Run("OptaFeedItemVersionToCurrentVersionOptaFeedItems", testOptaFeedItemVersionToManyAddOpCurrentVersionOptaFeedItems)
	t.Run("OptaFeedItemToItemOptaFeedItemVersions", testOptaFeedItemToManyAddOpItemOptaFeedItemVersions)
	t.Run("OrderToTransactions", testOrderToManyAddOpTransactions)
	t.Run("PlayerToGameEvents", testPlayerToManyAddOpGameEvents)
	t.Run("PlayerToGamePicks", testPlayerToManyAddOpGamePicks)
	t.Run("PlayerToMatchEvents", testPlayerToManyAddOpMatchEvents)
	t.Run("PlayerToMatchPlayers", testPlayerToManyAddOpMatchPlayers)
	t.Run("PlayerToSeasonTeamPlayers", testPlayerToManyAddOpSeasonTeamPlayers)
	t.Run("PlayerToSelectionTeamPlayers", testPlayerToManyAddOpSelectionTeamPlayers)
	t.Run("PowerupToGamePowerups", testPowerupToManyAddOpGamePowerups)
	t.Run("PowerupToPowerupActions", testPowerupToManyAddOpPowerupActions)
	t.Run("RegionToTeams", testRegionToManyAddOpTeams)
	t.Run("RewardToAppInboxes", testRewardToManyAddOpAppInboxes)
	t.Run("RewardToDivisionRewards", testRewardToManyAddOpDivisionRewards)
	t.Run("SeasonToLeaderboards", testSeasonToManyAddOpLeaderboards)
	t.Run("SeasonToMatches", testSeasonToManyAddOpMatches)
	t.Run("SeasonToSeasonCompetitionMembers", testSeasonToManyAddOpSeasonCompetitionMembers)
	t.Run("SeasonToSeasonTeamPlayers", testSeasonToManyAddOpSeasonTeamPlayers)
	t.Run("SoccerWikiPlayerToPlayers", testSoccerWikiPlayerToManyAddOpPlayers)
	t.Run("SportToActions", testSportToManyAddOpActions)
	t.Run("SportToCompetitionConfigs", testSportToManyAddOpCompetitionConfigs)
	t.Run("SportToCompetitions", testSportToManyAddOpCompetitions)
	t.Run("SportToGames", testSportToManyAddOpGames)
	t.Run("SportToMatches", testSportToManyAddOpMatches)
	t.Run("SportToPowerups", testSportToManyAddOpPowerups)
	t.Run("StoreProductTransactionToStoreTransactionAssignedCardPacks", testStoreProductTransactionToManyAddOpStoreTransactionAssignedCardPacks)
	t.Run("StoreProductToProductStoreProductTransactions", testStoreProductToManyAddOpProductStoreProductTransactions)
	t.Run("SubscriptionToSubscriptionHistories", testSubscriptionToManyAddOpSubscriptionHistories)
	t.Run("SubscriptionToUsers", testSubscriptionToManyAddOpUsers)
	t.Run("TeamToGameEvents", testTeamToManyAddOpGameEvents)
	t.Run("TeamToLeaderboards", testTeamToManyAddOpLeaderboards)
	t.Run("TeamToMatchEvents", testTeamToManyAddOpMatchEvents)
	t.Run("TeamToMatchPlayers", testTeamToManyAddOpMatchPlayers)
	t.Run("TeamToAwayTeamMatches", testTeamToManyAddOpAwayTeamMatches)
	t.Run("TeamToHomeTeamMatches", testTeamToManyAddOpHomeTeamMatches)
	t.Run("TeamToPlayerBuckets", testTeamToManyAddOpPlayerBuckets)
	t.Run("TeamToSeasonCompetitionMembers", testTeamToManyAddOpSeasonCompetitionMembers)
	t.Run("TeamToSeasonTeamPlayers", testTeamToManyAddOpSeasonTeamPlayers)
	t.Run("TransactionToMatchLeaderboards", testTransactionToManyAddOpMatchLeaderboards)
	t.Run("TransactionToStoreProductTransactions", testTransactionToManyAddOpStoreProductTransactions)
	t.Run("UserToAppInboxes", testUserToManyAddOpAppInboxes)
	t.Run("UserToAssignedCardPacks", testUserToManyAddOpAssignedCardPacks)
	t.Run("UserToBanPenalties", testUserToManyAddOpBanPenalties)
	t.Run("UserToSenderChatMessages", testUserToManyAddOpSenderChatMessages)
	t.Run("UserToFromUserFollowers", testUserToManyAddOpFromUserFollowers)
	t.Run("UserToToUserFollowers", testUserToManyAddOpToUserFollowers)
	t.Run("UserToGames", testUserToManyAddOpGames)
	t.Run("UserToManualSubscriptions", testUserToManyAddOpManualSubscriptions)
	t.Run("UserToMatchLeaderboards", testUserToManyAddOpMatchLeaderboards)
	t.Run("UserToMatchNotifications", testUserToManyAddOpMatchNotifications)
	t.Run("UserToOrders", testUserToManyAddOpOrders)
	t.Run("UserToPushNotifications", testUserToManyAddOpPushNotifications)
	t.Run("UserToStoreProductTransactions", testUserToManyAddOpStoreProductTransactions)
	t.Run("UserToAppUserSubscriptionRequests", testUserToManyAddOpAppUserSubscriptionRequests)
	t.Run("UserToTransactions", testUserToManyAddOpTransactions)
	t.Run("UserToUserBadges", testUserToManyAddOpUserBadges)
	t.Run("UserToUserBanners", testUserToManyAddOpUserBanners)
	t.Run("UserToUserDivisions", testUserToManyAddOpUserDivisions)
	t.Run("UserToUserFrames", testUserToManyAddOpUserFrames)
	t.Run("UserToUserGameWeekHistories", testUserToManyAddOpUserGameWeekHistories)
	t.Run("UserToUserLeaderboardSubscriptions", testUserToManyAddOpUserLeaderboardSubscriptions)
	t.Run("UserToReferrerUsers", testUserToManyAddOpReferrerUsers)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("AssignedPlayerToGamePicks", testAssignedPlayerToManySetOpGamePicks)
	t.Run("CompetitionConfigToConfigCompetitions", testCompetitionConfigToManySetOpConfigCompetitions)
	t.Run("CompetitionEditionToEditionMatches", testCompetitionEditionToManySetOpEditionMatches)
	t.Run("CompetitionToRelatedCompetitionCompetitionConfigs", testCompetitionToManySetOpRelatedCompetitionCompetitionConfigs)
	t.Run("CountryToLeaderboards", testCountryToManySetOpLeaderboards)
	t.Run("CountryToPlayerBuckets", testCountryToManySetOpPlayerBuckets)
	t.Run("CountryToTeams", testCountryToManySetOpTeams)
	t.Run("DivisionToDivisionRewards", testDivisionToManySetOpDivisionRewards)
	t.Run("DivisionToMatchLeaderboards", testDivisionToManySetOpMatchLeaderboards)
	t.Run("DivisionToNewDivisionUserGameWeekHistories", testDivisionToManySetOpNewDivisionUserGameWeekHistories)
	t.Run("DivisionToWeekDivisionUserGameWeekHistories", testDivisionToManySetOpWeekDivisionUserGameWeekHistories)
	t.Run("DjangoCeleryBeatClockedscheduleToClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatClockedscheduleToManySetOpClockedDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatCrontabscheduleToCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatCrontabscheduleToManySetOpCrontabDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatIntervalscheduleToIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatIntervalscheduleToManySetOpIntervalDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatSolarscheduleToSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatSolarscheduleToManySetOpSolarDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoContentTypeToContentTypeDjangoAdminLogs", testDjangoContentTypeToManySetOpContentTypeDjangoAdminLogs)
	t.Run("GamePowerupToPowerupGameEvents", testGamePowerupToManySetOpPowerupGameEvents)
	t.Run("GameSeasonToSeasonGameWeeks", testGameSeasonToManySetOpSeasonGameWeeks)
	t.Run("GameWeekToGameWeekIDAppInboxes", testGameWeekToManySetOpGameWeekIDAppInboxes)
	t.Run("GameWeekToWeekTransactions", testGameWeekToManySetOpWeekTransactions)
	t.Run("GameToAppInboxes", testGameToManySetOpAppInboxes)
	t.Run("ItemToOrders", testItemToManySetOpOrders)
	t.Run("LeaderboardTypeToMatchLeaderboards", testLeaderboardTypeToManySetOpMatchLeaderboards)
	t.Run("MatchDayToMatches", testMatchDayToManySetOpMatches)
	t.Run("MatchEventToGameEvents", testMatchEventToManySetOpGameEvents)
	t.Run("MatchLeaderboardToLeaderboardGameWeeks", testMatchLeaderboardToManySetOpLeaderboardGameWeeks)
	t.Run("MatchToMatchIDAppInboxes", testMatchToManySetOpMatchIDAppInboxes)
	t.Run("MatchToChatRooms", testMatchToManySetOpChatRooms)
	t.Run("MatchToSimulationFromMatchMatches", testMatchToManySetOpSimulationFromMatchMatches)
	t.Run("MatchToOptaFeeds", testMatchToManySetOpOptaFeeds)
	t.Run("MatchToPushNotifications", testMatchToManySetOpPushNotifications)
	t.Run("MatchToTransactions", testMatchToManySetOpTransactions)
	t.Run("NFTBucketToPlayerNFTAssignedPlayers", testNFTBucketToManySetOpPlayerNFTAssignedPlayers)
	t.Run("OptaFeedItemVersionToMatchEvents", testOptaFeedItemVersionToManySetOpMatchEvents)
	t.Run("OptaFeedItemVersionToCurrentVersionOptaFeedItems", testOptaFeedItemVersionToManySetOpCurrentVersionOptaFeedItems)
	t.Run("OrderToTransactions", testOrderToManySetOpTransactions)
	t.Run("PlayerToMatchEvents", testPlayerToManySetOpMatchEvents)
	t.Run("RegionToTeams", testRegionToManySetOpTeams)
	t.Run("RewardToAppInboxes", testRewardToManySetOpAppInboxes)
	t.Run("RewardToDivisionRewards", testRewardToManySetOpDivisionRewards)
	t.Run("SeasonToLeaderboards", testSeasonToManySetOpLeaderboards)
	t.Run("SoccerWikiPlayerToPlayers", testSoccerWikiPlayerToManySetOpPlayers)
	t.Run("SportToActions", testSportToManySetOpActions)
	t.Run("SportToCompetitionConfigs", testSportToManySetOpCompetitionConfigs)
	t.Run("SportToCompetitions", testSportToManySetOpCompetitions)
	t.Run("SportToGames", testSportToManySetOpGames)
	t.Run("SportToMatches", testSportToManySetOpMatches)
	t.Run("SportToPowerups", testSportToManySetOpPowerups)
	t.Run("StoreProductTransactionToStoreTransactionAssignedCardPacks", testStoreProductTransactionToManySetOpStoreTransactionAssignedCardPacks)
	t.Run("SubscriptionToUsers", testSubscriptionToManySetOpUsers)
	t.Run("TeamToLeaderboards", testTeamToManySetOpLeaderboards)
	t.Run("TeamToMatchEvents", testTeamToManySetOpMatchEvents)
	t.Run("TransactionToMatchLeaderboards", testTransactionToManySetOpMatchLeaderboards)
	t.Run("TransactionToStoreProductTransactions", testTransactionToManySetOpStoreProductTransactions)
	t.Run("UserToAppInboxes", testUserToManySetOpAppInboxes)
	t.Run("UserToMatchNotifications", testUserToManySetOpMatchNotifications)
	t.Run("UserToStoreProductTransactions", testUserToManySetOpStoreProductTransactions)
	t.Run("UserToReferrerUsers", testUserToManySetOpReferrerUsers)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("AssignedPlayerToGamePicks", testAssignedPlayerToManyRemoveOpGamePicks)
	t.Run("CompetitionConfigToConfigCompetitions", testCompetitionConfigToManyRemoveOpConfigCompetitions)
	t.Run("CompetitionEditionToEditionMatches", testCompetitionEditionToManyRemoveOpEditionMatches)
	t.Run("CompetitionToRelatedCompetitionCompetitionConfigs", testCompetitionToManyRemoveOpRelatedCompetitionCompetitionConfigs)
	t.Run("CountryToLeaderboards", testCountryToManyRemoveOpLeaderboards)
	t.Run("CountryToPlayerBuckets", testCountryToManyRemoveOpPlayerBuckets)
	t.Run("CountryToTeams", testCountryToManyRemoveOpTeams)
	t.Run("DivisionToDivisionRewards", testDivisionToManyRemoveOpDivisionRewards)
	t.Run("DivisionToMatchLeaderboards", testDivisionToManyRemoveOpMatchLeaderboards)
	t.Run("DivisionToNewDivisionUserGameWeekHistories", testDivisionToManyRemoveOpNewDivisionUserGameWeekHistories)
	t.Run("DivisionToWeekDivisionUserGameWeekHistories", testDivisionToManyRemoveOpWeekDivisionUserGameWeekHistories)
	t.Run("DjangoCeleryBeatClockedscheduleToClockedDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatClockedscheduleToManyRemoveOpClockedDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatCrontabscheduleToCrontabDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatCrontabscheduleToManyRemoveOpCrontabDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatIntervalscheduleToIntervalDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatIntervalscheduleToManyRemoveOpIntervalDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoCeleryBeatSolarscheduleToSolarDjangoCeleryBeatPeriodictasks", testDjangoCeleryBeatSolarscheduleToManyRemoveOpSolarDjangoCeleryBeatPeriodictasks)
	t.Run("DjangoContentTypeToContentTypeDjangoAdminLogs", testDjangoContentTypeToManyRemoveOpContentTypeDjangoAdminLogs)
	t.Run("GamePowerupToPowerupGameEvents", testGamePowerupToManyRemoveOpPowerupGameEvents)
	t.Run("GameSeasonToSeasonGameWeeks", testGameSeasonToManyRemoveOpSeasonGameWeeks)
	t.Run("GameWeekToGameWeekIDAppInboxes", testGameWeekToManyRemoveOpGameWeekIDAppInboxes)
	t.Run("GameWeekToWeekTransactions", testGameWeekToManyRemoveOpWeekTransactions)
	t.Run("GameToAppInboxes", testGameToManyRemoveOpAppInboxes)
	t.Run("ItemToOrders", testItemToManyRemoveOpOrders)
	t.Run("LeaderboardTypeToMatchLeaderboards", testLeaderboardTypeToManyRemoveOpMatchLeaderboards)
	t.Run("MatchDayToMatches", testMatchDayToManyRemoveOpMatches)
	t.Run("MatchEventToGameEvents", testMatchEventToManyRemoveOpGameEvents)
	t.Run("MatchLeaderboardToLeaderboardGameWeeks", testMatchLeaderboardToManyRemoveOpLeaderboardGameWeeks)
	t.Run("MatchToMatchIDAppInboxes", testMatchToManyRemoveOpMatchIDAppInboxes)
	t.Run("MatchToChatRooms", testMatchToManyRemoveOpChatRooms)
	t.Run("MatchToSimulationFromMatchMatches", testMatchToManyRemoveOpSimulationFromMatchMatches)
	t.Run("MatchToOptaFeeds", testMatchToManyRemoveOpOptaFeeds)
	t.Run("MatchToPushNotifications", testMatchToManyRemoveOpPushNotifications)
	t.Run("MatchToTransactions", testMatchToManyRemoveOpTransactions)
	t.Run("NFTBucketToPlayerNFTAssignedPlayers", testNFTBucketToManyRemoveOpPlayerNFTAssignedPlayers)
	t.Run("OptaFeedItemVersionToMatchEvents", testOptaFeedItemVersionToManyRemoveOpMatchEvents)
	t.Run("OptaFeedItemVersionToCurrentVersionOptaFeedItems", testOptaFeedItemVersionToManyRemoveOpCurrentVersionOptaFeedItems)
	t.Run("OrderToTransactions", testOrderToManyRemoveOpTransactions)
	t.Run("PlayerToMatchEvents", testPlayerToManyRemoveOpMatchEvents)
	t.Run("RegionToTeams", testRegionToManyRemoveOpTeams)
	t.Run("RewardToAppInboxes", testRewardToManyRemoveOpAppInboxes)
	t.Run("RewardToDivisionRewards", testRewardToManyRemoveOpDivisionRewards)
	t.Run("SeasonToLeaderboards", testSeasonToManyRemoveOpLeaderboards)
	t.Run("SoccerWikiPlayerToPlayers", testSoccerWikiPlayerToManyRemoveOpPlayers)
	t.Run("SportToActions", testSportToManyRemoveOpActions)
	t.Run("SportToCompetitionConfigs", testSportToManyRemoveOpCompetitionConfigs)
	t.Run("SportToCompetitions", testSportToManyRemoveOpCompetitions)
	t.Run("SportToGames", testSportToManyRemoveOpGames)
	t.Run("SportToMatches", testSportToManyRemoveOpMatches)
	t.Run("SportToPowerups", testSportToManyRemoveOpPowerups)
	t.Run("StoreProductTransactionToStoreTransactionAssignedCardPacks", testStoreProductTransactionToManyRemoveOpStoreTransactionAssignedCardPacks)
	t.Run("SubscriptionToUsers", testSubscriptionToManyRemoveOpUsers)
	t.Run("TeamToLeaderboards", testTeamToManyRemoveOpLeaderboards)
	t.Run("TeamToMatchEvents", testTeamToManyRemoveOpMatchEvents)
	t.Run("TransactionToMatchLeaderboards", testTransactionToManyRemoveOpMatchLeaderboards)
	t.Run("TransactionToStoreProductTransactions", testTransactionToManyRemoveOpStoreProductTransactions)
	t.Run("UserToAppInboxes", testUserToManyRemoveOpAppInboxes)
	t.Run("UserToMatchNotifications", testUserToManyRemoveOpMatchNotifications)
	t.Run("UserToStoreProductTransactions", testUserToManyRemoveOpStoreProductTransactions)
	t.Run("UserToReferrerUsers", testUserToManyRemoveOpReferrerUsers)
}
